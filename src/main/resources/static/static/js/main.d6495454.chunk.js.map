{"version":3,"sources":["actions/types.js","actions/groupActions.js","components/Group/GroupView.js","components/Group/CreateGroupButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Invitation.js","actions/invitationActions.js","components/Layout/EventNotification.js","actions/eventNotificationActions.js","components/Layout/Message.js","components/Layout/Header.js","components/Group/AddGroup.js","reducers/errorReducer.js","reducers/groupReducer.js","reducers/movieListReducer.js","reducers/movieReducer.js","reducers/securityReducer.js","reducers/invitationReducer.js","reducers/eventReducer.js","reducers/eventNotificationReducer.js","reducers/index.js","store.js","components/Group/UpdateGroup.js","actions/movieListActions.js","components/Group/GroupBoard/MovieList/MovieListItem.js","actions/eventAction.js","components/Group/GroupBoard/Event/EventItem.js","components/Group/GroupBoard/GroupBoard.js","components/Group/GroupBoard/MovieList/AddMovieList.js","components/Group/GroupBoard/MovieList/UpdateMovieList.js","actions/movieActions.js","components/Group/GroupBoard/MovieList/MovieListBoard/MovieItem.js","components/Group/GroupBoard/MovieList/MovieListBoard/MovieListBoard.js","components/Group/GroupBoard/MovieList/MovieListBoard/AddMovie.js","components/Group/GroupBoard/MovieList/MovieListBoard/UpdateMovie.js","components/Layout/Landing.js","components/UserManagement/Register.js","securityUtils/SecureRoute.js","components/UserManagement/Login.js","components/Group/GroupBoard/InvitePage.js","components/Group/GroupBoard/SearchPage.js","components/Group/GroupBoard/MovieList/PullMovieList.js","components/Group/GroupBoard/Event/AddEvent.js","components/Group/GroupBoard/Event/UpdateEvent.js","components/Group/GroupBoard/Event/VoteItem.js","components/Group/GroupBoard/Event/EventPage.js","App.js","serviceWorker.js","index.js"],"names":["GET_ERRORS","createGroup","group","history","dispatch","a","axios","post","push","type","payload","response","data","getGroup","id","get","res","GroupView","onDeleteClick","props","deleteGroup","create","this","currentUser","moderator","Fragment","to","groupID","className","onClick","bind","groupName","description","Component","protoTypes","PropTypes","func","isRequired","object","connect","state","security","user","username","window","confirm","delete","CreateGroupButton","Dashboard","getGroups","groups","map","key","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Invitation","deleteInvitation","onAcceptClick","accpetInvitation","invitation","inviterName","EventNotification","deleteEventNotification","notification","eventName","Message","getInvitations","getEventNotifications","invitations","notifications","Header","location","href","headerLinks","validToken","userIsAuthenticated","fullName","DropdownButton","variant","title","size","Dropdown","Item","userIsNotAuthenticated","data-toggle","data-target","AddGroup","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newGroup","classnames","placeholder","initialState","movieLists","movieList","movies","movie","booleanActionPayload","events","event","combineReducers","action","filter","initalState","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateGroup","match","params","updateGroup","disabled","createMovieList","getMovieList","MovieListItem","deleteMovieList","movieListName","createEvent","eventGroupId","getEvent","EventItem","deleteEvent","eventTime","movieListId","GroupBoard","getMovieLists","getEvents","eventButton","currentTime","Date","upcomingEvents","passEvents","Tabs","fill","defaultActiveKey","Tab","eventKey","groupId","AddMovieList","nmovieListNameame","newMovieList","UpdateMovieList","movieGroupID","createMovie","getMovies","MovieItem","movieList_id","reviewLink","deleteMovie","MovieListBoard","AddMovie","trailerLink","newMovie","UpdateMovie","getMovie","Landing","Register","password","confirmPassword","newUser","createNewUser","SecuredRoute","component","otherProps","render","Login","LoginRequest","login","setItem","decoded","jwt_decode","InvitePage","inviteUser","inviation","SearchPage","moviename","clearState","searchMovies","movie_name","group_id","PullMovieList","pullMovieList","AddEvent","voteStartTime","voteEndTime","newEvent","UpdateEvent","eventID","VoteItem","onVoteClick","eventId","movieId","vote","voteButton","count","voteStart","voteEnd","EventPage","getWinner","winner","winnerMovie","counts","jwtToken","now","exp","App","exact","path","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6SAAaA,EAAa,aCGbC,EAAc,SAACC,EAAOC,GAAR,8CAAoB,WAAOC,GAAP,SAAAC,EAAA,+EAErCC,IAAMC,KAAK,aAAcL,GAFY,OAG3CC,EAAQK,KAAK,cACbJ,EAAS,CACPK,KAAMT,EACNU,QAAS,KANgC,gDAS3CN,EAAS,CACPK,KAAMT,EACNU,QAAS,KAAMC,SAASC,OAXiB,yDAApB,uDAwBdC,EAAW,SAACC,EAAIX,GAAL,8CAAiB,WAAOC,GAAP,eAAAC,EAAA,+EAEnBC,IAAMS,IAAN,qBAAwBD,IAFL,OAE/BE,EAF+B,OAGrCZ,EAAS,CACPK,KD7BmB,YC8BnBC,QAASM,EAAIJ,OALsB,gDAQrCT,EAAQK,KAAK,cARwB,yDAAjB,uDCrBlBS,E,4MACJC,cAAgB,SAACJ,GACf,EAAKK,MAAMC,YAAYN,I,uDAGf,IAMJO,EALInB,EAAUoB,KAAKH,MAAfjB,MA4BR,OApBEmB,EANkBC,KAAKH,MAAMI,cACbrB,EAAMsB,UAMpB,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,CAAMC,GAAE,uBAAkBxB,EAAMyB,UAC9B,wBAAIC,UAAU,0BACZ,uBAAGA,UAAU,mBAAb,wBAIJ,wBACEA,UAAU,yBACVC,QAASP,KAAKJ,cAAcY,KAAKR,KAAMpB,EAAMyB,UAE7C,uBAAGC,UAAU,2BAAb,mBAKG,GAIT,yBAAKA,UAAU,aACb,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,0BAAMA,UAAU,WAAW1B,EAAMyB,UAEnC,yBAAKC,UAAU,2BACb,4BAAK1B,EAAM6B,WACX,2BAAI7B,EAAM8B,cAEZ,yBAAKJ,UAAU,8BACb,wBAAIA,UAAU,cACZ,kBAAC,IAAD,CAAMF,GAAE,sBAAiBxB,EAAMyB,UAC7B,wBAAIC,UAAU,yBACZ,uBAAGA,UAAU,6BAAb,mBAGHP,W,GApDOY,aA8DxBhB,EAAUiB,WAAa,CACrBd,YAAae,IAAUC,KAAKC,WAC5Bd,YAAaY,IAAUG,OAAOD,YAGhC,IAIeE,eAJS,SAACC,GAAD,MAAY,CAClCjB,YAAaiB,EAAMC,SAASC,KAAKC,YAGK,CAAEvB,YDtCf,SAACN,GAAD,8CAAQ,WAAOV,GAAP,SAAAC,EAAA,0DAC7BuC,OAAOC,QAAQ,sCADc,gCAEzBvC,IAAMwC,OAAN,qBAA2BhC,IAFF,OAG/BV,EAAS,CACPK,KDxCsB,eCyCtBC,QAASI,IALoB,2CAAR,wDCsCZyB,CAA0CtB,GChE1C8B,EAVW,WACxB,OACE,kBAAC,IAAMtB,SAAP,KACE,kBAAC,IAAD,CAAMC,GAAG,YAAYE,UAAU,uBAA/B,oBCCAoB,E,kLAEF1B,KAAKH,MAAM8B,c,+BAGH,IACAC,EAAW5B,KAAKH,MAAMjB,MAAtBgD,OACR,OACE,yBAAKtB,UAAU,UACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,yBAAd,UACA,6BACA,kBAAC,EAAD,MAEA,6BACA,6BAECsB,EAAOC,KAAI,SAAAjD,GAAK,OACf,kBAAC,EAAD,CAAWkD,IAAKlD,EAAMY,GAAIZ,MAAOA,e,GApBzB+B,aA8BxBe,EAAUd,WAAa,CACrBhC,MAAOiC,IAAUG,OAAOD,WACxBY,UAAWd,IAAUC,KAAKC,YAG5B,IAIeE,eAJS,SAAAC,GAAK,MAAK,CAChCtC,MAAOsC,EAAMtC,SAGyB,CAAE+C,UH3BjB,yDAAM,WAAO7C,GAAP,eAAAC,EAAA,sEACXC,IAAMS,IAAI,qBADC,OACvBC,EADuB,OAE7BZ,EAAS,CACPK,KDrBsB,aCsBtBC,QAASM,EAAIJ,OAJc,2CAAN,wDG2BV2B,CAAwCS,GCpCxCK,G,OARK,SAAAC,GACdA,EACFhD,IAAMiD,SAASC,QAAQC,OAAvB,cAAiDH,SAE1ChD,IAAMiD,SAASC,QAAQC,OAAvB,gB,iBCqCEC,EAAS,kBAAM,SAACtD,GAC3BuD,aAAaC,WAAW,YACxBP,GAAY,GACZjD,EAAS,CACPK,KNlC4B,mBMmC5BC,QAAS,O,gBCxCPmD,E,4MACJ3C,cAAgB,SAACJ,GACf,EAAKK,MAAM2C,iBAAiBhD,I,EAG9BiD,cAAgB,SAACjD,GACf,EAAKK,MAAM6C,iBAAiBlD,I,uDAGpB,IACAmD,EAAe3C,KAAKH,MAApB8C,WAER,OACE,yBAAKrC,UAAU,sBACb,yBAAKA,UAAU,sBACZqC,EAAWC,YADd,mCAC2D,IACzD,4BACEtC,UAAU,sBACVC,QAASP,KAAKyC,cAAcjC,KAAKR,KAAM2C,EAAWnD,KAFpD,UAMA,4BACEc,UAAU,eACVC,QAASP,KAAKJ,cAAcY,KAAKR,KAAM2C,EAAWnD,KAFpD,gB,GAtBemB,aAkCzB4B,EAAW3B,WAAa,CACtB4B,iBAAkB3B,IAAUC,KAAKC,WACjC2B,iBAAkB7B,IAAUC,KAAKC,YAGpBE,kBAAQ,KAAM,CAAEuB,iBC5BC,SAAChD,GAAD,8CAAQ,WAAOV,GAAP,SAAAC,EAAA,0DAClCuC,OAAOC,QAAQ,0CADmB,gCAE9BvC,IAAMwC,OAAN,+BAAqChC,IAFP,OAGpCV,EAAS,CACPK,KRN2B,oBQO3BC,QAASI,IALyB,2CAAR,uDD4BiBkD,iBCpCjB,SAAClD,GAAD,8CAAQ,WAAOV,GAAP,SAAAC,EAAA,sEAChCC,IAAMC,KAAN,6BAAiCO,IADD,OAEtCV,EAAS,CACPK,KRI6B,oBQH7BC,QAASI,IAJ2B,2CAAR,wDDoCjByB,CACbsB,GE3CIM,E,4MACJjD,cAAgB,SAACJ,GACf,EAAKK,MAAMiD,wBAAwBtD,I,uDAG3B,IACAuD,EAAiB/C,KAAKH,MAAtBkD,aAER,OACE,yBAAKzC,UAAU,sBACb,yBAAKA,UAAU,sBAAf,iBACiByC,EAAatC,UAD9B,6BACmE,IAChEsC,EAAaC,UACd,6BACA,4BACE1C,UAAU,eACVC,QAASP,KAAKJ,cAAcY,KAAKR,KAAM+C,EAAavD,KAFtD,gB,GAdsBmB,aA0BhCkC,EAAkBjC,WAAa,CAC7BkC,wBAAyBjC,IAAUC,KAAKC,YAG3BE,kBAAQ,KAAM,CAAE6B,wBCxBQ,SAACtD,GAAD,8CAAQ,WAAOV,GAAP,SAAAC,EAAA,0DACzCuC,OAAOC,QAAQ,6CAD0B,gCAErCvC,IAAMwC,OAAN,sCAA4ChC,IAFP,OAG3CV,EAAS,CACPK,KVUkC,2BUTlCC,QAASI,IALgC,2CAAR,wDDwBxByB,CAA2C4B,GE3BpDI,E,kLAEFjD,KAAKH,MAAMqD,iBACXlD,KAAKH,MAAMsD,0B,+BAIX,IAAMC,EAAcpD,KAAKH,MAAM8C,WAAWS,YACpCC,EAAgBrD,KAAKH,MAAMwD,cAEjC,OACE,6BACGD,EAAYvB,KAAI,SAACc,GAAD,OACf,kBAAC,EAAD,CAAYb,IAAKa,EAAWnD,GAAImD,WAAYA,OAG7CU,EAAcxB,KAAI,SAACkB,GAAD,OACjB,kBAAC,EAAD,CACEjB,IAAKiB,EAAavD,GAClBuD,aAAcA,Y,GAnBJpC,aAuCPM,eALS,SAACC,GAAD,MAAY,CAClCyB,WAAYzB,EAAMyB,WAClBU,cAAenC,EAAM6B,aAAaM,iBAGI,CACtCH,eH7C4B,yDAAM,WAAOpE,GAAP,eAAAC,EAAA,sEAChBC,IAAMS,IAAI,yBADM,OAC5BC,EAD4B,OAElCZ,EAAS,CACPK,KRS2B,kBQR3BC,QAASM,EAAIJ,OAJmB,2CAAN,uDG8C5B6D,sBD9CmC,yDAAM,WAAOrE,GAAP,eAAAC,EAAA,sEACvBC,IAAMS,IAAI,gCADa,OACnCC,EADmC,OAEzCZ,EAAS,CACPK,KVkBkC,yBUjBlCC,QAASM,EAAIJ,OAJ0B,2CAAN,wDC4CtB2B,CAGZgC,GCzCGK,E,uKAEFtD,KAAKH,MAAMuC,SACXd,OAAOiC,SAASC,KAAO,M,+BAGf,IA+DJC,EA/DG,EACsBzD,KAAKH,MAAMsB,SAAhCuC,EADD,EACCA,WAAYtC,EADb,EACaA,KAEduC,EACJ,yBAAKrD,UAAU,2BAA2Bd,GAAG,cAC3C,wBAAIc,UAAU,sBACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWF,GAAG,cAA9B,eAMJ,wBAAIE,UAAU,sBACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWF,GAAG,cAC5B,uBAAGE,UAAU,4BACZc,EAAKwC,WAGV,wBAAItD,UAAU,YACZ,kBAAC,IAAD,CACEA,UAAU,WACVF,GAAG,UACHG,QAASP,KAAKoC,OAAO5B,KAAKR,OAH5B,WAQF,wBAAIM,UAAU,YACZ,kBAACuD,EAAA,EAAD,CACErE,GAAG,uBACHc,UAAU,cACVwD,QAAQ,UACRC,MAAM,UACNC,KAAK,MAEL,kBAACC,EAAA,EAASC,KAAV,KACE,kBAAC,EAAD,WAQNC,EACJ,yBAAK7D,UAAU,2BAA2Bd,GAAG,cAC3C,wBAAIc,UAAU,sBACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWF,GAAG,aAA9B,YAIF,wBAAIE,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWF,GAAG,UAA9B,YAgBR,OALEqD,EADEC,GAActC,EACFuC,EAEAQ,EAId,yBAAK7D,UAAU,uDACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAMA,UAAU,eAAeF,GAAG,KAAlC,+BAGA,4BACEE,UAAU,iBACVnB,KAAK,SACLiF,cAAY,WACZC,cAAY,eAEZ,0BAAM/D,UAAU,yBAEjBmD,Q,GA3FU9C,aA2GNM,eAJS,SAACC,GAAD,MAAY,CAClCC,SAAUD,EAAMC,YAGsB,CAAEiB,UAA3BnB,CAAqCqC,G,wCC9G9CgB,E,kDACJ,aAAe,IAAD,8BACZ,gBAEKpD,MAAQ,CACXT,UAAW,GACXJ,QAAS,GACTK,YAAa,GACb6D,OAAQ,IAGV,EAAKC,SAAW,EAAKA,SAAShE,KAAd,gBAChB,EAAKiE,SAAW,EAAKA,SAASjE,KAAd,gBAXJ,E,sEAeYkE,GACpBA,EAAUH,QACZvE,KAAK2E,SAAS,CAAEJ,OAAQG,EAAUH,W,+BAI7BK,GACP5E,KAAK2E,SAAL,eAAiBC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,+BAGnCH,GACPA,EAAEI,iBACF,IAAMC,EAAW,CACfxE,UAAWT,KAAKkB,MAAMT,UACtBJ,QAASL,KAAKkB,MAAMb,QACpBK,YAAaV,KAAKkB,MAAMR,aAE1BV,KAAKH,MAAMlB,YAAYsG,EAAUjF,KAAKH,MAAMhB,W,+BAGpC,IACA0F,EAAWvE,KAAKkB,MAAhBqD,OAER,OACE,yBAAKjE,UAAU,SACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,yBAAd,qBACA,6BACA,0BAAMmE,SAAUzE,KAAKyE,UACnB,yBAAKnE,UAAU,cACb,2BACEnB,KAAK,OACLmB,UAAW4E,IAAW,gCAAiC,CACrD,aAAcX,EAAO9D,YAEvB0E,YAAY,aACZL,KAAK,YACLC,MAAO/E,KAAKkB,MAAMT,UAClB+D,SAAUxE,KAAKwE,WAEhBD,EAAO9D,WACN,yBAAKH,UAAU,oBAAoBiE,EAAO9D,YAG9C,yBAAKH,UAAU,cACb,2BACEnB,KAAK,OACLmB,UAAW4E,IAAW,gCAAiC,CACrD,aAAcX,EAAOlE,UAEvB8E,YAAY,kBACZL,KAAK,UACLC,MAAO/E,KAAKkB,MAAMb,QAClBmE,SAAUxE,KAAKwE,WAEhBD,EAAOlE,SACN,yBAAKC,UAAU,oBAAoBiE,EAAOlE,UAG9C,yBAAKC,UAAU,cACb,8BACEA,UAAW4E,IAAW,gCAAiC,CACrD,aAAcX,EAAO7D,cAEvByE,YAAY,oBACZL,KAAK,cACLC,MAAO/E,KAAKkB,MAAMR,YAClB8D,SAAUxE,KAAKwE,WAEhBD,EAAO7D,aACN,yBAAKJ,UAAU,oBAAoBiE,EAAO7D,cAI9C,2BACEvB,KAAK,SACLmB,UAAU,4C,GA9FLK,aAkHRM,eAJS,SAAAC,GAAK,MAAK,CAChCqD,OAAQrD,EAAMqD,UAGwB,CAAE5F,eAA3BsC,CAA0CqD,G,gBCtHnDc,EAAe,G,QCAfA,EAAe,CACnBxD,OAAQ,GACRhD,MAAO,ICEHwG,GAAe,CACnBC,WAAY,GACZC,UAAW,ICNPF,GAAe,CACnBG,OAAQ,GACRC,MAAO,ICFHJ,GAAe,CACnB1B,YAAY,EACZtC,KAAM,IAGFqE,GAAuB,SAAArG,GAC3B,QAAIA,GCFAgG,GAAe,CACnBhC,YAAa,GACbT,WAAY,ICNRyC,GAAe,CACnBM,OAAQ,GACRC,MAAO,ICCHP,GAAe,CACnB/B,cAAe,ICIFuC,eAAgB,CAC7BrB,ORPa,WAAwC,IAA/BrD,EAA8B,uDAAtBkE,EAAcS,EAAQ,uCACpD,OAAQA,EAAO1G,MACb,KAAKT,EACH,OAAOmH,EAAOzG,QAEhB,QACE,OAAO8B,IQEXtC,MPLa,WAAwC,IAA/BsC,EAA8B,uDAAtBkE,EAAcS,EAAQ,uCACpD,OAAQA,EAAO1G,MACb,IfRsB,aeSpB,OAAO,eACF+B,EADL,CAEEU,OAAQiE,EAAOzG,UAGnB,IfbqB,YecnB,OAAO,eACF8B,EADL,CAEEtC,MAAOiH,EAAOzG,UAGlB,IflBwB,eemBtB,OAAO,eACF8B,EADL,CAEEU,OAAQV,EAAMU,OAAOkE,QAAO,SAAAlH,GAAK,OAAIA,EAAMyB,UAAYwF,EAAOzG,aAGlE,QACE,OAAO8B,IOfXoE,UNFa,WAAwC,IAA/BpE,EAA8B,uDAAtBkE,GAAcS,EAAQ,uCACpD,OAAQA,EAAO1G,MACb,IhBR0B,iBgBSxB,OAAO,eACF+B,EADL,CAEEmE,WAAYQ,EAAOzG,UAGvB,IhBbyB,gBgBcvB,OAAO,eACF8B,EADL,CAEEoE,UAAWO,EAAOzG,UAGtB,IhBlB4B,mBgBmB1B,OAAO,eACF8B,EADL,CAEEmE,WAAYnE,EAAMmE,WAAWS,QAC3B,SAAAR,GAAS,OAAIA,EAAU9F,KAAOqG,EAAOzG,aAI3C,QACE,OAAO8B,IMpBXsE,MLPa,WAAwC,IAA/BtE,EAA8B,uDAAtBkE,GAAcS,EAAQ,uCACpD,OAAQA,EAAO1G,MACb,IjBAsB,aiBCpB,OAAO,eACF+B,EADL,CAEEqE,OAAQM,EAAOzG,UAGnB,IjBLqB,YiBMnB,OAAO,eACF8B,EADL,CAEEsE,MAAOK,EAAOzG,UAGlB,IjBVwB,eiBWtB,OAAO,eACF8B,EADL,CAEEqE,OAAQrE,EAAMqE,OAAOO,QAAO,SAAAN,GAAK,OAAIA,EAAMhG,KAAOqG,EAAOzG,aAG7D,QACE,OAAO8B,IKbXC,SJAa,WAAwC,IAA/BD,EAA8B,uDAAtBkE,GAAcS,EAAQ,uCACpD,OAAQA,EAAO1G,MACb,IlBJ4B,mBkBK1B,OAAO,eACF+B,EADL,CAEEwC,WAAY+B,GAAqBI,EAAOzG,SACxCgC,KAAMyE,EAAOzG,UAGjB,QACE,OAAO8B,IITXyB,WHLa,WAAyC,IAA/BzB,EAA8B,uDAAtBkE,GAAcS,EAAQ,uCACrD,OAAQA,EAAO1G,MACb,InBE2B,kBmBDzB,OAAO,eACF+B,EADL,CAEEkC,YAAayC,EAAOzG,UAGxB,InBH0B,iBmBIxB,OAAO,eACF8B,EADL,CAEEyB,WAAYzB,EAAMkC,YAAY0C,QAC5B,SAACnD,GAAD,OAAgBA,EAAWnD,KAAOqG,EAAOzG,aAI/C,InBV6B,oBmBW3B,OAAO,eACF8B,EADL,CAEEkC,YAAalC,EAAMkC,YAAY0C,QAC7B,SAACnD,GAAD,OAAgBA,EAAWnD,KAAOqG,EAAOzG,aAI/C,QACE,OAAO8B,IGnBXyE,MFVa,WAAyC,IAA/BzE,EAA8B,uDAAtBkE,GAAcS,EAAQ,uCACrD,OAAQA,EAAO1G,MACb,IpBWsB,aoBVpB,OAAO,eACF+B,EADL,CAEEwE,OAAQG,EAAOzG,UAGnB,IpBMqB,YoBLnB,OAAO,eACF8B,EADL,CAEEyE,MAAOE,EAAOzG,UAGlB,IpBCwB,eoBAtB,OAAO,eACF8B,EADL,CAEEwE,OAAQxE,EAAMwE,OAAOI,QAAO,SAACH,GAAD,OAAWA,EAAMnG,KAAOqG,EAAOzG,aAG/D,QACE,OAAO8B,IEVX6B,aDTa,WAAyC,IAA/B7B,EAA8B,uDAAtBkE,GAAcS,EAAQ,uCACrD,OAAQA,EAAO1G,MACb,IrBakC,yBqBZhC,OAAO,eACF+B,EADL,CAEEmC,cAAewC,EAAOzG,UAG1B,IrBQoC,2BqBPlC,OAAO,eACF8B,EADL,CAEEmC,cAAenC,EAAMmC,cAAcyC,QACjC,SAAC/C,GAAD,OAAkBA,EAAavD,KAAOqG,EAAOzG,aAInD,QACE,OAAO8B,MEtBP6E,GAAc,GACdC,GAAa,CAACC,KAIdC,GACJ5E,OAAO6E,8BAAgC7E,OAAO6E,+BAgBjCC,GAdX9E,OAAO+E,UAAUC,UAAUC,SAAS,WAAaL,GAC3CM,YACNC,GACAV,GACAW,YAAQC,IAAe,WAAf,EAAmBX,IAAaE,KAGlCM,YACNC,GACAV,GACAW,YAAQC,IAAe,WAAf,EAAmBX,MChBzBY,G,kDAEJ,aAAe,IAAD,8BACZ,gBAEK1F,MAAQ,CACX1B,GAAI,GACJiB,UAAW,GACXJ,QAAS,GACTK,YAAa,GACb6D,OAAQ,IAEV,EAAKC,SAAW,EAAKA,SAAShE,KAAd,gBAChB,EAAKiE,SAAW,EAAKA,SAASjE,KAAd,gBAXJ,E,sEAcYkE,GACpBA,EAAUH,QACZvE,KAAK2E,SAAS,CAAEJ,OAAQG,EAAUH,SAFD,MAKaG,EAAU9F,MAAlDY,EAL2B,EAK3BA,GAAIiB,EALuB,EAKvBA,UAAWJ,EALY,EAKZA,QAASK,EALG,EAKHA,YAEhCV,KAAK2E,SAAS,CACZnF,KACAiB,YACAJ,UACAK,kB,0CAIiB,IACXlB,EAAOQ,KAAKH,MAAMgH,MAAMC,OAAxBtH,GACRQ,KAAKH,MAAMN,SAASC,EAAIQ,KAAKH,MAAMhB,W,+BAG5B+F,GACP5E,KAAK2E,SAAL,eAAiBC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,+BAGnCH,GACPA,EAAEI,iBAEF,IAAM+B,EAAc,CAClBvH,GAAIQ,KAAKkB,MAAM1B,GACfiB,UAAWT,KAAKkB,MAAMT,UACtBJ,QAASL,KAAKkB,MAAMb,QACpBK,YAAaV,KAAKkB,MAAMR,aAG1BV,KAAKH,MAAMlB,YAAYoI,EAAa/G,KAAKH,MAAMhB,W,+BAGvC,IACA0F,EAAWvE,KAAKkB,MAAhBqD,OACR,OACE,yBAAKjE,UAAU,SACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,yBAAd,qBACA,6BACA,0BAAMmE,SAAUzE,KAAKyE,UACnB,yBAAKnE,UAAU,cACb,2BACEnB,KAAK,OACLmB,UAAW4E,IAAW,+BAAgC,CACpD,aAAcX,EAAO9D,YAEvB0E,YAAY,aACZL,KAAK,YACLC,MAAO/E,KAAKkB,MAAMT,UAClB+D,SAAUxE,KAAKwE,WAEhBD,EAAO9D,WACN,yBAAKH,UAAU,oBAAoBiE,EAAO9D,YAG9C,yBAAKH,UAAU,cACb,2BACEnB,KAAK,OACLmB,UAAU,+BACV6E,YAAY,kBACZL,KAAK,UACLC,MAAO/E,KAAKkB,MAAMb,QAClB2G,UAAQ,KAGZ,yBAAK1G,UAAU,cACb,8BACEA,UAAW4E,IAAW,+BAAgC,CACpD,aAAcX,EAAO7D,cAEvByE,YAAY,oBACZL,KAAK,cACLN,SAAUxE,KAAKwE,SACfO,MAAO/E,KAAKkB,MAAMR,cAEnB6D,EAAO7D,aACN,yBAAKJ,UAAU,oBAAoBiE,EAAO7D,cAI9C,2BACEvB,KAAK,SACLmB,UAAU,4C,GAzGFK,aAoH1BiG,GAAYhG,WAAa,CACvBrB,SAAUsB,IAAUC,KAAKC,WACzBpC,YAAakC,IAAUC,KAAKC,WAC5BnC,MAAOiC,IAAUG,OAAOD,WACxBwD,OAAQ1D,IAAUG,OAAOD,YAG3B,IAKeE,gBALS,SAAAC,GAAK,MAAK,CAChCtC,MAAOsC,EAAMtC,MAAMA,MACnB2F,OAAQrD,EAAMqD,UAGwB,CAAEhF,WAAUZ,eAArCsC,CAAoD2F,I,oBC9HtDK,GAAkB,SAACzH,EAAI8F,EAAWzG,GAAhB,8CAA4B,WAAOC,GAAP,SAAAC,EAAA,+EAEjDC,IAAMC,KAAN,yBAA6BO,GAAM8F,GAFc,OAGvDzG,EAAQK,KAAR,sBAA4BM,IAH2B,+CAKvDV,EAAS,CACPK,KAAMT,EACNU,QAAS,KAAMC,SAASC,OAP6B,wDAA5B,uDA2BlB4H,GAAe,SAAC1H,EAAIX,GAAL,8CAAiB,WAAOC,GAAP,eAAAC,EAAA,+EAEvBC,IAAMS,IAAN,yBAA4BD,IAFL,OAEnCE,EAFmC,OAGzCZ,EAAS,CACPK,KzBjCuB,gByBkCvBC,QAASM,EAAIJ,OAL0B,gDAQzCT,EAAQK,KAAK,cAR4B,yDAAjB,uDC7BtBiI,G,4MACJvH,cAAgB,SAACJ,GACf,EAAKK,MAAMuH,gBAAgB5H,I,uDAGnB,IAMJO,EALIuF,EAActF,KAAKH,MAAnByF,UAEFrF,EAAcD,KAAKH,MAAMI,YACzBC,EAAYF,KAAKH,MAAMK,UA0B7B,OArBEH,EADEE,IAAgBC,EAEhB,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,CACEC,GAAE,sCAAiCkF,EAAU9F,IAC7Cc,UAAU,qBAFZ,UAOA,4BACEA,UAAU,sBACVC,QAASP,KAAKJ,cAAcY,KAAKR,KAAMsF,EAAU9F,KAFnD,WASK,GAIT,yBAAKc,UAAU,sBACb,yBAAKA,UAAU,4BAAf,OAA+CgF,EAAU9F,IACzD,yBAAKc,UAAU,sBACb,wBAAIA,UAAU,cAAd,UAAmCgF,EAAU+B,eAC7C,uBAAG/G,UAAU,4BAA4BgF,EAAU5E,aACnD,kBAAC,IAAD,CACEN,GAAE,qCAAgCkF,EAAU9F,GAA1C,YAAgDU,GAClDI,UAAU,mBAFZ,QAOCP,Q,GAhDiBY,aAuD5BwG,GAAcvG,WAAa,CACzBwG,gBAAiBvG,IAAUC,KAAKC,WAChCb,UAAWW,IAAUG,OAAOD,WAC5Bd,YAAaY,IAAUG,OAAOD,YAGhC,IAKeE,gBALS,SAACC,GAAD,MAAY,CAClCjB,YAAaiB,EAAMC,SAASC,KAAKC,SACjCnB,UAAWgB,EAAMtC,MAAMA,MAAMsB,aAGS,CAAEkH,gBDzBX,SAAC5H,GAAD,8CAAQ,WAAOV,GAAP,SAAAC,EAAA,0DACjCuC,OAAOC,QAAQ,2CADkB,gCAE7BvC,IAAMwC,OAAN,yBAA+BhC,IAFF,OAGnCV,EAAS,CACPK,KzB5C0B,mByB6C1BC,QAASI,IALwB,2CAAR,wDCyBhByB,CAA8CkG,IC/DhDG,GAAc,SAAC3B,EAAO9G,GAAR,8CAAoB,WAAOC,GAAP,SAAAC,EAAA,+EAErCC,IAAMC,KAAK,aAAc0G,GAFY,OAG3C9G,EAAQK,KAAR,sBAA4ByG,EAAM4B,eAClCzI,EAAS,CACPK,KAAMT,EACNU,QAAS,KANgC,gDAS3CN,EAAS,CACPK,KAAMT,EACNU,QAAS,KAAMC,SAASC,OAXiB,yDAApB,uDAiDdkI,GAAW,SAAChI,EAAIX,GAAL,8CAAiB,WAAOC,GAAP,eAAAC,EAAA,+EAEnBC,IAAMS,IAAN,qBAAwBD,IAFL,OAE/BE,EAF+B,OAGrCZ,EAAS,CACPK,K3BzCmB,Y2B0CnBC,QAASM,EAAIJ,OALsB,gDAQrCT,EAAQK,KAAK,cARwB,yDAAjB,uDCpDlBuI,G,4MACJ7H,cAAgB,SAACJ,GACf,EAAKK,MAAM6H,YAAYlI,I,uDAIvB,IAKIO,EALE4F,EAAQ3F,KAAKH,MAAM8F,MA4BzB,OApBE5F,EANkBC,KAAKH,MAAMI,cACbD,KAAKH,MAAMK,UAMzB,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,CACEC,GAAE,kCAA6BuF,EAAMnG,IACrCc,UAAU,qBAFZ,UAMA,4BACEA,UAAU,sBACVC,QAASP,KAAKJ,cAAcY,KAAKR,KAAM2F,EAAMnG,KAF/C,WASK,GAIT,yBAAKc,UAAU,sBACb,yBAAKA,UAAU,4BAAf,SAAiDqF,EAAM3C,WACvD,yBAAK1C,UAAU,sBACb,wBAAIA,UAAU,cAAd,gBAAyCqF,EAAMjF,aAC/C,2CAAiBiF,EAAMgC,WACvB,kBAAC,IAAD,CACEvH,GAAE,gCAA2BuF,EAAMnG,GAAjC,YAAuCmG,EAAMiC,aAC/CtH,UAAU,mBAFZ,QAOCP,Q,GA/CaY,aAsDxB8G,GAAU7G,WAAa,CACrB8G,YAAa7G,IAAUC,KAAKC,WAC5Bb,UAAWW,IAAUG,OAAOD,WAC5Bd,YAAaY,IAAUG,OAAOD,YAGhC,IAKeE,gBALS,SAACC,GAAD,MAAY,CAClCjB,YAAaiB,EAAMC,SAASC,KAAKC,SACjCnB,UAAWgB,EAAMtC,MAAMA,MAAMsB,aAGS,CAAEwH,YDDf,SAAClI,GAAD,8CAAQ,WAAOV,GAAP,SAAAC,EAAA,0DAC7BuC,OAAOC,QAAQ,sCADc,gCAEzBvC,IAAMwC,OAAN,qBAA2BhC,IAFF,OAG/BV,EAAS,CACPK,K3BpDsB,e2BqDtBC,QAASI,IALoB,2CAAR,wDCCZyB,CAA0CwG,IC5DnDI,G,kLACiB,IACXrI,EAAOQ,KAAKH,MAAMgH,MAAMC,OAAxBtH,GACRQ,KAAKH,MAAMN,SAASC,EAAIQ,KAAKH,MAAMhB,SACnCmB,KAAKH,MAAMiI,cAActI,GACzBQ,KAAKH,MAAMkI,UAAUvI,K,+BAGb,IAOJO,EACAiI,EAPIxI,EAAOQ,KAAKH,MAAMgH,MAAMC,OAAxBtH,GACA6F,EAAerF,KAAKH,MAAMyF,UAA1BD,WACAK,EAAW1F,KAAKH,MAAM8F,MAAtBD,OACFzF,EAAcD,KAAKH,MAAMsB,SAASC,KAAKC,SACvCnB,EAAYF,KAAKH,MAAMjB,MAAMsB,UAK/BD,IAAgBC,GAClBH,EACE,6BACE,kBAAC,IAAD,CACEK,GAAE,mCAA8BZ,GAChCc,UAAU,uBAEV,uBAAGA,UAAU,sBAAb,uBAGF,6BAEA,kBAAC,IAAD,CACEF,GAAE,iCAA4BF,EAA5B,YAAyCF,KAAKH,MAAMjB,MAAMyB,SAC5DC,UAAU,uBAEV,uBAAGA,UAAU,sBAAb,4BAGF,6BACA,kBAAC,IAAD,CACEF,GAAE,oCAA+BZ,GACjCc,UAAU,uBAEV,uBAAGA,UAAU,sBAAb,wBAKN0H,EACE,6BACE,kBAAC,IAAD,CACE5H,GAAE,+BAA0BZ,GAC5Bc,UAAU,uBAEV,uBAAGA,UAAU,sBAAb,uBAKN0H,EAAc,GACdjI,EAAS,IAGX,IAAIkI,EAAc,IAAIC,KAElBC,EAAiB,GACjBC,EAAa,GAWjB,OATA1C,EAAO7D,KAAI,SAAC8D,GACM,IAAIuC,KAAKvC,EAAMgC,WACfM,EACdE,EAAejJ,KAAKyG,GAEpByC,EAAWlJ,KAAKyG,MAKlB,yBAAKrF,UAAU,cACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,yBACXN,KAAKH,MAAMjB,MAAM6B,WAEpB,6BACA,wBAAIH,UAAU,eAAeN,KAAKH,MAAMjB,MAAM8B,aAC9C,kBAAC2H,GAAA,EAAD,CACEvE,QAAQ,QACRwE,MAAI,EACJC,iBAAiB,aACjB/I,GAAG,4BAEH,kBAACgJ,GAAA,EAAD,CAAKC,SAAS,aAAa1E,MAAM,eAC/B,yBAAKzD,UAAU,YACb,yBAAKA,UAAU,UACZ+E,EAAWxD,KAAI,SAACyD,GAAD,OACd,kBAAC,GAAD,CACExD,IAAKwD,EAAU9F,GACf8F,UAAWA,QAIjB,yBAAKhF,UAAU,WACZP,EACD,6BACA,kBAAC,IAAD,CACEK,GAAE,iCAA4BZ,GAC9Bc,UAAU,uBAEV,uBAAGA,UAAU,iBAAb,qBAKR,kBAACkI,GAAA,EAAD,CAAKC,SAAS,iBAAiB1E,MAAM,mBACnC,yBAAKzD,UAAU,YACb,yBAAKA,UAAU,UACZ6H,EAAetG,KAAI,SAAC8D,GAAD,OAClB,kBAAC,GAAD,CAAW7D,IAAK6D,EAAMnG,GAAImG,MAAOA,QAIrC,yBAAKrF,UAAU,UAAU0H,KAG7B,kBAACQ,GAAA,EAAD,CAAKC,SAAS,eAAe1E,MAAM,iBAChCqE,EAAWvG,KAAI,SAAC8D,GAAD,OACd,kBAAC,GAAD,CAAW7D,IAAK6D,EAAMnG,GAAImG,MAAOA,iB,GA/H5BhF,aA2IzBkH,GAAWjH,WAAa,CACtBhC,MAAOiC,IAAUG,OAAOD,WACxBxB,SAAUsB,IAAUC,KAAKC,WACzB+G,cAAejH,IAAUC,KAAKC,WAC9BuE,UAAWzE,IAAUG,OAAOD,WAC5BI,SAAUN,IAAUG,OAAOD,WAC3B4E,MAAO9E,IAAUG,OAAOD,WACxBgH,UAAWlH,IAAUC,KAAKC,YAG5B,IAOeE,gBAPS,SAACC,GAAD,MAAY,CAClCtC,MAAOsC,EAAMtC,MAAMA,MACnB0G,UAAWpE,EAAMoE,UACjBnE,SAAUD,EAAMC,SAChBwE,MAAOzE,EAAMyE,SAGyB,CAAEpG,WAAUuI,cJnJvB,SAACtI,GAAD,8CAAQ,WAAOV,GAAP,eAAAC,EAAA,+EAEfC,IAAMS,IAAN,6BAAgCD,IAFjB,OAE3BE,EAF2B,OAGjCZ,EAAS,CACPK,KzBnBwB,iByBoBxBC,QAASM,EAAIJ,OALkB,gDAQjCR,EAAS,CACPK,KAAMT,EACNU,QAAS,KAAMC,SAASC,OAVO,yDAAR,uDImJsCyI,UFrH1C,SAACW,GAAD,8CAAa,WAAO5J,GAAP,eAAAC,EAAA,sEAClBC,IAAMS,IAAN,yBAA4BiJ,IADV,OAC9BhJ,EAD8B,OAEpCZ,EAAS,CACPK,K3BjCsB,a2BkCtBC,QAASM,EAAIJ,OAJqB,2CAAb,wDEqHV2B,CACb4G,ICjKIc,G,kDACJ,aAAe,IAAD,8BACZ,gBAEKzH,MAAQ,CACX0H,kBAAmB,GACnBlI,YAAa,GACb6D,OAAQ,IAGV,EAAKC,SAAW,EAAKA,SAAShE,KAAd,gBAChB,EAAKiE,SAAW,EAAKA,SAASjE,KAAd,gBAVJ,E,sEAaYkE,GACpBA,EAAUH,QACZvE,KAAK2E,SAAS,CAAEJ,OAAQG,EAAUH,W,+BAI7BK,GACP5E,KAAK2E,SAAL,eAAiBC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,+BAGnCH,GAAI,IACHpF,EAAOQ,KAAKH,MAAMgH,MAAMC,OAAxBtH,GAERoF,EAAEI,iBACF,IAAM6D,EAAe,CACnBxB,cAAerH,KAAKkB,MAAM4D,KAC1BpE,YAAaV,KAAKkB,MAAMR,aAE1BV,KAAKH,MAAMoH,gBAAgBzH,EAAIqJ,EAAc7I,KAAKH,MAAMhB,W,+BAGhD,IACA0F,EAAWvE,KAAKkB,MAAhBqD,OACA/E,EAAOQ,KAAKH,MAAMgH,MAAMC,OAAxBtH,GAER,OACE,yBAAKc,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CAAMF,GAAE,sBAAiBZ,GAAMc,UAAU,iBAAzC,uBAGA,wBAAIA,UAAU,yBAAd,0BACA,6BACA,0BAAMmE,SAAUzE,KAAKyE,UACnB,yBAAKnE,UAAU,cACb,2BACEnB,KAAK,OACLmB,UAAW4E,IAAW,gCAAiC,CACrD,aAAcX,EAAO8C,gBAEvBlC,YAAY,iBACZL,KAAK,OACLC,MAAO/E,KAAKkB,MAAMmG,cAClB7C,SAAUxE,KAAKwE,WAEhBD,EAAO8C,eACN,yBAAK/G,UAAU,oBACZiE,EAAO8C,gBAId,yBAAK/G,UAAU,cACb,8BACEA,UAAW4E,IAAW,gCAAiC,CACrD,aAAcX,EAAO7D,cAEvByE,YAAY,wBACZL,KAAK,cACLC,MAAO/E,KAAKkB,MAAMR,YAClB8D,SAAUxE,KAAKwE,WAEhBD,EAAO7D,aACN,yBAAKJ,UAAU,oBAAoBiE,EAAO7D,cAI9C,2BACEvB,KAAK,SACLmB,UAAU,4C,GApFDK,aAwGZM,gBAJS,SAACC,GAAD,MAAY,CAClCqD,OAAQrD,EAAMqD,UAGwB,CAAE0C,oBAA3BhG,CAA8C0H,ICrGvDG,G,kDACJ,aAAe,IAAD,8BACZ,gBAEK5H,MAAQ,CACXmG,cAAe,GACf3G,YAAa,GACbqI,aAAc,GACdxE,OAAQ,IAGV,EAAKC,SAAW,EAAKA,SAAShE,KAAd,gBAChB,EAAKiE,SAAW,EAAKA,SAASjE,KAAd,gBAXJ,E,sEAcYkE,GACpBA,EAAUH,QACZvE,KAAK2E,SAAS,CAAEJ,OAAQG,EAAUH,SAFD,MAU/BG,EAAUY,UAJZ9F,EANiC,EAMjCA,GACA6H,EAPiC,EAOjCA,cACA3G,EARiC,EAQjCA,YACAqI,EATiC,EASjCA,aAGF/I,KAAK2E,SAAS,CACZnF,KACA6H,gBACA3G,cACAqI,mB,0CAIiB,IACXvJ,EAAOQ,KAAKH,MAAMgH,MAAMC,OAAxBtH,GACRQ,KAAKH,MAAMqH,aAAa1H,EAAIQ,KAAKH,MAAMhB,W,+BAGhC+F,GACP5E,KAAK2E,SAAL,eAAiBC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,+BAGnCH,GACPA,EAAEI,iBACF,IAAM6D,EAAe,CACnBrJ,GAAIQ,KAAKkB,MAAM1B,GACf6H,cAAerH,KAAKkB,MAAMmG,cAC1B3G,YAAaV,KAAKkB,MAAMR,aAE1BV,KAAKH,MAAMoH,gBACTjH,KAAKkB,MAAM6H,aACXF,EACA7I,KAAKH,MAAMhB,W,+BAIL,IACA0F,EAAWvE,KAAKkB,MAAhBqD,OAER,OACE,yBAAKjE,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CACEF,GAAE,sBAAiBJ,KAAKkB,MAAM6H,cAC9BzI,UAAU,iBAFZ,uBAMA,wBAAIA,UAAU,yBAAd,0BAEA,6BACA,0BAAMmE,SAAUzE,KAAKyE,UACnB,yBAAKnE,UAAU,cACb,2BACEnB,KAAK,OACLmB,UAAW4E,IAAW,gCAAiC,CACrD,aAAcX,EAAO8C,gBAEvBlC,YAAY,iBACZL,KAAK,gBACLC,MAAO/E,KAAKkB,MAAMmG,cAClB7C,SAAUxE,KAAKwE,WAEhBD,EAAO8C,eACN,yBAAK/G,UAAU,oBACZiE,EAAO8C,gBAId,yBAAK/G,UAAU,cACb,8BACEA,UAAW4E,IAAW,gCAAiC,CACrD,aAAcX,EAAO7D,cAEvByE,YAAY,wBACZL,KAAK,cACLC,MAAO/E,KAAKkB,MAAMR,YAClB8D,SAAUxE,KAAKwE,WAEhBD,EAAO7D,aACN,yBAAKJ,UAAU,oBAAoBiE,EAAO7D,cAI9C,2BACEvB,KAAK,SACLmB,UAAU,4C,GA9GEK,aAyH9BmI,GAAgBlI,WAAa,CAC3BqG,gBAAiBpG,IAAUC,KAAKC,WAChCmG,aAAcrG,IAAUC,KAAKC,WAC7BuE,UAAWzE,IAAUG,OAAOD,WAC5BwD,OAAQ1D,IAAUG,OAAOD,YAG3B,IAKeE,gBALS,SAAAC,GAAK,MAAK,CAChCoE,UAAWpE,EAAMoE,UAAUA,UAC3Bf,OAAQrD,EAAMqD,UAGwB,CAAE2C,gBAAcD,oBAAzChG,CACb6H,IC7IWE,GAAc,SAACxJ,EAAIgG,EAAOtF,EAAWrB,GAAvB,8CAAmC,WAC5DC,GAD4D,SAAAC,EAAA,+EAIpDC,IAAMC,KAAN,qBAAyBO,GAAMgG,GAJqB,OAK1D1G,EAAS,CACPK,KAAMT,EACNU,QAAS,KAEXP,EAAQK,KAAR,qCAA2CM,EAA3C,YAAiDU,IATS,gDAW1DpB,EAAS,CACPK,KAAMT,EACNU,QAAS,KAAMC,SAASC,OAbgC,yDAAnC,uDAkBd2J,GAAY,SAACzJ,GAAD,8CAAQ,WAAOV,GAAP,eAAAC,EAAA,+EAEXC,IAAMS,IAAN,yBAA4BD,IAFjB,OAEvBE,EAFuB,OAG7BZ,EAAS,CACPK,KhChBoB,agCiBpBC,QAASM,EAAIJ,OALc,gDAQ7BR,EAAS,CACPK,KAAMT,EACNU,QAAS,KAAMC,SAASC,OAVG,yDAAR,uDCfnB4J,G,4MACJtJ,cAAgB,SAACJ,GACf,EAAKK,MAAMC,YAAYN,I,uDAIvB,IAKIO,EALEyF,EAAQxF,KAAKH,MAAM2F,MAEnBvF,EAAcD,KAAKH,MAAMI,YACzBC,EAAYF,KAAKH,MAAMK,UAyB7B,OApBEH,EADEE,IAAgBC,EAEhB,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,CACEC,GAAE,iDAA4CoF,EAAM2D,aAAlD,YAAkE3D,EAAMhG,GAAxE,YAA8EU,GAChFI,UAAU,qBAFZ,UAMA,4BACEA,UAAU,sBACVC,QAASP,KAAKJ,cAAcY,KAAKR,KAAMwF,EAAMhG,KAF/C,WASK,GAIT,yBAAKc,UAAU,sBACb,yBAAKA,UAAU,4BAAf,SACSkF,EAAMV,KACZ/E,GAEH,yBAAKO,UAAU,sBACb,wBAAIA,UAAU,cAAd,gBAAyCkF,EAAM9E,aAE/C,4BACE,uBAAG8C,KAAMgC,EAAM4D,YAAf,sBAEF,4BACE,uBAAG5F,KAAMgC,EAAM4D,YAAf,2B,GA/CYzI,aAuDxBuI,GAAUtI,WAAa,CACrByI,YAAaxI,IAAUC,KAAKC,WAC5Bb,UAAWW,IAAUG,OAAOD,WAC5Bd,YAAaY,IAAUG,OAAOD,YAGhC,IAKeE,gBALS,SAACC,GAAD,MAAY,CAClCjB,YAAaiB,EAAMC,SAASC,KAAKC,SACjCnB,UAAWgB,EAAMtC,MAAMA,MAAMsB,aAGS,CAAEJ,YDxBf,SAACN,GAAD,8CAAQ,WAAOV,GAAP,SAAAC,EAAA,0DAC7BuC,OAAOC,QAAQ,sCADc,gCAEzBvC,IAAMwC,OAAN,qBAA2BhC,IAFF,OAG/BV,EAAS,CACPK,KhCzCsB,egC0CtBC,QAASI,IALoB,2CAAR,wDCwBZyB,CAA0CiI,IChEnDI,G,kLACiB,IACX9J,EAAOQ,KAAKH,MAAMgH,MAAMC,OAAxBtH,GACRQ,KAAKH,MAAMqH,aAAa1H,EAAIQ,KAAKH,MAAMhB,SACvCmB,KAAKH,MAAMoJ,UAAUzJ,K,+BAIrB,IAKIO,EALEwF,EAASvF,KAAKH,MAAM0F,OAEpBtF,EAAcD,KAAKH,MAAMI,YACvBC,EAAcF,KAAKH,MAAMgH,MAAMC,OAA/B5G,UAiBR,OAZEH,EADEE,IAAgBC,EAEhB,kBAAC,IAAD,CACEE,GAAE,8CAAyCJ,KAAKH,MAAMyF,UAAU9F,GAA9D,YAAoEU,GACtEI,UAAU,uBAFZ,eAQO,GAIT,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CACEF,GAAE,sBAAiBJ,KAAKH,MAAMyF,UAAUyD,cACxCzI,UAAU,iBAFZ,uBAMA,wBAAIA,UAAU,yBACXN,KAAKH,MAAMyF,UAAU+B,eAExB,wBAAI/G,UAAU,eACXN,KAAKH,MAAMyF,UAAU5E,aAEvBX,EACD,6BACA,6BACCwF,EAAO1D,KAAI,SAAC2D,GAAD,OACV,kBAAC,GAAD,CAAW1D,IAAK0D,EAAMhG,GAAIgG,MAAOA,e,GAjDpB7E,aA2D7B2I,GAAe1I,WAAa,CAC1BsG,aAAcrG,IAAUC,KAAKC,WAC7BuE,UAAWzE,IAAUG,OAAOD,WAC5ByE,MAAO3E,IAAUG,OAAOD,WACxBb,UAAWW,IAAUG,OAAOD,WAC5Bd,YAAaY,IAAUG,OAAOD,YAGhC,IAOeE,gBAPS,SAACC,GAAD,MAAY,CAClCoE,UAAWpE,EAAMoE,UAAUA,UAC3BC,OAAQrE,EAAMsE,MAAMD,OACpBrF,UAAWgB,EAAMtC,MAAMA,MAAMsB,UAC7BD,YAAaiB,EAAMC,SAASC,KAAKC,YAGK,CAAE6F,gBAAc+B,cAAzChI,CACbqI,IC5EIC,G,kDACJ,aAAe,IAAD,8BACZ,gBAEKrI,MAAQ,CACX4D,KAAM,GACNpE,YAAa,GACb0I,WAAY,GACZI,YAAa,GACbjF,OAAQ,IAGV,EAAKC,SAAW,EAAKA,SAAShE,KAAd,gBAChB,EAAKiE,SAAW,EAAKA,SAASjE,KAAd,gBAZJ,E,sEAeYkE,GACpBA,EAAUH,QACZvE,KAAK2E,SAAS,CAAEJ,OAAQG,EAAUH,W,+BAI7BK,GACP5E,KAAK2E,SAAL,eAAiBC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,+BAGnCH,GAAI,IAAD,EACgB5E,KAAKH,MAAMgH,MAAMC,OAAnCtH,EADE,EACFA,GAAIU,EADF,EACEA,UAEZ0E,EAAEI,iBACF,IAAMyE,EAAW,CACf3E,KAAM9E,KAAKkB,MAAM4D,KACjBpE,YAAaV,KAAKkB,MAAMR,YACxB0I,WAAYpJ,KAAKkB,MAAMkI,WACvBI,YAAaxJ,KAAKkB,MAAMsI,aAE1BxJ,KAAKH,MAAMmJ,YAAYxJ,EAAIiK,EAAUvJ,EAAWF,KAAKH,MAAMhB,W,+BAGnD,IACA0F,EAAWvE,KAAKkB,MAAhBqD,OACA/E,EAAOQ,KAAKH,MAAMgH,MAAMC,OAAxBtH,GAER,OACE,yBAAKc,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CACEF,GAAE,qCAAgCZ,GAClCc,UAAU,iBAFZ,sBAMA,wBAAIA,UAAU,yBAAd,qBACA,6BACA,0BAAMmE,SAAUzE,KAAKyE,UACnB,yBAAKnE,UAAU,cACb,2BACEnB,KAAK,OACLmB,UAAW4E,IAAW,gCAAiC,CACrD,aAAcX,EAAOO,OAEvBK,YAAY,aACZL,KAAK,OACLC,MAAO/E,KAAKkB,MAAM4D,KAClBN,SAAUxE,KAAKwE,WAEhBD,EAAOO,MACN,yBAAKxE,UAAU,oBAAoBiE,EAAOO,OAG9C,yBAAKxE,UAAU,cACb,8BACEA,UAAW4E,IAAW,gCAAiC,CACrD,aAAcX,EAAO7D,cAEvByE,YAAY,oBACZL,KAAK,cACLC,MAAO/E,KAAKkB,MAAMR,YAClB8D,SAAUxE,KAAKwE,WAEhBD,EAAO7D,aACN,yBAAKJ,UAAU,oBAAoBiE,EAAO7D,cAG9C,yBAAKJ,UAAU,cACb,2BACEA,UAAW4E,IAAW,gCAAiC,CACrD,aAAcX,EAAO6E,aAEvBjK,KAAK,MACLgG,YAAY,mBACZL,KAAK,aACLC,MAAO/E,KAAKkB,MAAMkI,WAClB5E,SAAUxE,KAAKwE,WAEhBD,EAAO6E,YACN,yBAAK9I,UAAU,oBAAoBiE,EAAO6E,aAG9C,yBAAK9I,UAAU,cACb,2BACEA,UAAW4E,IAAW,gCAAiC,CACrD,aAAcX,EAAOiF,cAEvBrK,KAAK,MACLgG,YAAY,wBACZL,KAAK,cACLC,MAAO/E,KAAKkB,MAAMsI,YAClBhF,SAAUxE,KAAKwE,WAEhBD,EAAOiF,aACN,yBAAKlJ,UAAU,oBAAoBiE,EAAOiF,cAI9C,2BACErK,KAAK,SACLmB,UAAU,4C,GAvHLK,aA2IRM,gBAJS,SAACC,GAAD,MAAY,CAClCqD,OAAQrD,EAAMqD,UAGwB,CAAEyE,gBAA3B/H,CAA0CsI,IC3InDG,G,kDACJ,aAAe,IAAD,8BACZ,gBAEKxI,MAAQ,CACX1B,GAAI,GACJsF,KAAM,GACNpE,YAAa,GACb0I,WAAY,GACZI,YAAa,GACbjF,OAAQ,IAGV,EAAKC,SAAW,EAAKA,SAAShE,KAAd,gBAChB,EAAKiE,SAAW,EAAKA,SAASjE,KAAd,gBAbJ,E,sEAgBYkE,GACpBA,EAAUH,QACZvE,KAAK2E,SAAS,CAAEJ,OAAQG,EAAUH,SAFD,MAY/BG,EAAUc,MANZhG,EANiC,EAMjCA,GACAsF,EAPiC,EAOjCA,KACApE,EARiC,EAQjCA,YACAyI,EATiC,EASjCA,aACAC,EAViC,EAUjCA,WACAI,EAXiC,EAWjCA,YAGFxJ,KAAK2E,SAAS,CACZnF,KACAsF,OACApE,cACAyI,eACAC,aACAI,kB,0CAIiB,IACXhK,EAAOQ,KAAKH,MAAMgH,MAAMC,OAAxBtH,GACRQ,KAAKH,MAAM8J,SAASnK,EAAIQ,KAAKH,MAAMhB,W,+BAG5B+F,GACP5E,KAAK2E,SAAL,eAAiBC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,+BAGnCH,GAAI,IAAD,EAC0B5E,KAAKH,MAAMgH,MAAMC,OAA7CqC,EADE,EACFA,aAAcjJ,EADZ,EACYA,UAEtB0E,EAAEI,iBACF,IAAMyE,EAAW,CACfjK,GAAIQ,KAAKkB,MAAM1B,GACfsF,KAAM9E,KAAKkB,MAAM4D,KACjBpE,YAAaV,KAAKkB,MAAMR,YACxB0I,WAAYpJ,KAAKkB,MAAMkI,WACvBI,YAAaxJ,KAAKkB,MAAMsI,aAE1BxJ,KAAKH,MAAMmJ,YACTG,EACAM,EACAvJ,EACAF,KAAKH,MAAMhB,W,+BAIL,IACA0F,EAAWvE,KAAKkB,MAAhBqD,OACA4E,EAAiBnJ,KAAKH,MAAMgH,MAAMC,OAAlCqC,aAER,OACE,yBAAK7I,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CACEF,GAAE,qCAAgC+I,GAClC7I,UAAU,iBAFZ,sBAMA,wBAAIA,UAAU,yBAAd,qBACA,6BACA,0BAAMmE,SAAUzE,KAAKyE,UACnB,yBAAKnE,UAAU,cACb,2BACEnB,KAAK,OACLmB,UAAW4E,IAAW,gCAAiC,CACrD,aAAcX,EAAOO,OAEvBK,YAAY,aACZL,KAAK,OACLC,MAAO/E,KAAKkB,MAAM4D,KAClBN,SAAUxE,KAAKwE,WAEhBD,EAAOO,MACN,yBAAKxE,UAAU,oBAAoBiE,EAAOO,OAG9C,yBAAKxE,UAAU,cACb,8BACEA,UAAW4E,IAAW,gCAAiC,CACrD,aAAcX,EAAO7D,cAEvByE,YAAY,oBACZL,KAAK,cACLC,MAAO/E,KAAKkB,MAAMR,YAClB8D,SAAUxE,KAAKwE,WAEhBD,EAAO7D,aACN,yBAAKJ,UAAU,oBAAoBiE,EAAO7D,cAG9C,yBAAKJ,UAAU,cACb,8BACEA,UAAW4E,IAAW,gCAAiC,CACrD,aAAcX,EAAO6E,aAEvBjE,YAAY,mBACZL,KAAK,aACLC,MAAO/E,KAAKkB,MAAMkI,WAClB5E,SAAUxE,KAAKwE,WAEhBD,EAAO6E,YACN,yBAAK9I,UAAU,oBAAoBiE,EAAO6E,aAG9C,yBAAK9I,UAAU,cACb,8BACEA,UAAW4E,IAAW,gCAAiC,CACrD,aAAcX,EAAOiF,cAEvBrE,YAAY,wBACZL,KAAK,cACLC,MAAO/E,KAAKkB,MAAMsI,YAClBhF,SAAUxE,KAAKwE,WAEhBD,EAAOiF,aACN,yBAAKlJ,UAAU,oBAAoBiE,EAAOiF,cAI9C,2BACErK,KAAK,SACLmB,UAAU,4C,GAnJFK,aA0KXM,gBALS,SAACC,GAAD,MAAY,CAClCsE,MAAOtE,EAAMsE,MAAMA,MACnBjB,OAAQrD,EAAMqD,UAGwB,CAAEyE,eAAaW,SJ7I/B,SAACnK,EAAIX,GAAL,8CAAiB,WAAOC,GAAP,eAAAC,EAAA,+EAEnBC,IAAMS,IAAN,qBAAwBD,IAFL,OAE/BE,EAF+B,OAGrCZ,EAAS,CACPK,KhC9BmB,YgC+BnBC,QAASM,EAAIJ,OALsB,gDAQrCT,EAAQK,KAAK,cARwB,yDAAjB,wDI6IT+B,CAAoDyI,IC5K7DE,G,kLAEE5J,KAAKH,MAAMsB,SAASuC,YACtB1D,KAAKH,MAAMhB,QAAQK,KAAK,gB,+BAK1B,OACE,yBAAKoB,UAAU,WACb,yBAAKA,UAAU,yCACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,kBAAd,gCACA,uBAAGA,UAAU,QAAb,wDAGA,6BACA,kBAAC,IAAD,CAAMF,GAAG,YAAYE,UAAU,+BAA/B,WAGA,kBAAC,IAAD,CAAMF,GAAG,SAASE,UAAU,iCAA5B,kB,GAtBMK,aAkCtBiJ,GAAQhJ,WAAa,CACnBO,SAAUN,IAAUG,OAAOD,YAG7B,IAIeE,gBAJS,SAAAC,GAAK,MAAK,CAChCC,SAAUD,EAAMC,YAGHF,CAAyB2I,ICzClCC,G,kDACJ,aAAe,IAAD,8BACZ,gBAEK3I,MAAQ,CACXG,SAAU,GACVuC,SAAU,GACVkG,SAAU,GACVC,gBAAiB,GACjBxF,OAAQ,IAGV,EAAKC,SAAW,EAAKA,SAAShE,KAAd,gBAChB,EAAKiE,SAAW,EAAKA,SAASjE,KAAd,gBAZJ,E,gEAgBRR,KAAKH,MAAMsB,SAASuC,YACtB1D,KAAKH,MAAMhB,QAAQK,KAAK,gB,gDAIFwF,GACpBA,EAAUH,QACZvE,KAAK2E,SAAS,CAAEJ,OAAQG,EAAUH,W,+BAI7BK,GACPA,EAAEI,iBACF,IAAMgF,EAAU,CACd3I,SAAUrB,KAAKkB,MAAMG,SACrBuC,SAAU5D,KAAKkB,MAAM0C,SACrBkG,SAAU9J,KAAKkB,MAAM4I,SACrBC,gBAAiB/J,KAAKkB,MAAM6I,iBAG9B/J,KAAKH,MAAMoK,cAAcD,EAAShK,KAAKH,MAAMhB,W,+BAGtC+F,GACP5E,KAAK2E,SAAL,eAAiBC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,+BAGlC,IACAR,EAAWvE,KAAKkB,MAAhBqD,OAER,OACE,yBAAKjE,UAAU,YACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,yBAAd,WACA,uBAAGA,UAAU,oBAAb,uBACA,0BAAMmE,SAAUzE,KAAKyE,UACnB,yBAAKnE,UAAU,cACb,2BACEnB,KAAK,OACLmB,UAAW4E,IAAW,+BAAgC,CACpD,aAAcX,EAAOX,WAEvBuB,YAAY,YACZL,KAAK,WACLC,MAAO/E,KAAKkB,MAAM0C,SAClBY,SAAUxE,KAAKwE,WAEhBD,EAAOX,UACN,yBAAKtD,UAAU,oBAAoBiE,EAAOX,WAG9C,yBAAKtD,UAAU,cACb,2BACEnB,KAAK,OACLmB,UAAW4E,IAAW,+BAAgC,CACpD,aAAcX,EAAOlD,WAEvB8D,YAAY,2BACZL,KAAK,WACLC,MAAO/E,KAAKkB,MAAMG,SAClBmD,SAAUxE,KAAKwE,WAEhBD,EAAOlD,UACN,yBAAKf,UAAU,oBAAoBiE,EAAOlD,WAG9C,yBAAKf,UAAU,cACb,2BACEnB,KAAK,WACLmB,UAAW4E,IAAW,+BAAgC,CACpD,aAAcX,EAAOuF,WAEvB3E,YAAY,WACZL,KAAK,WACLC,MAAO/E,KAAKkB,MAAM4I,SAClBtF,SAAUxE,KAAKwE,WAEhBD,EAAOuF,UACN,yBAAKxJ,UAAU,oBAAoBiE,EAAOuF,WAG9C,yBAAKxJ,UAAU,cACb,2BACEnB,KAAK,WACLmB,UAAW4E,IAAW,+BAAgC,CACpD,aAAcX,EAAOwF,kBAEvB5E,YAAY,mBACZL,KAAK,kBACLC,MAAO/E,KAAKkB,MAAM6I,gBAClBvF,SAAUxE,KAAKwE,WAEhBD,EAAOwF,iBACN,yBAAKzJ,UAAU,oBACZiE,EAAOwF,kBAId,2BAAO5K,KAAK,SAASmB,UAAU,yC,GArHxBK,aA+HvBkJ,GAASjJ,WAAa,CACpBqJ,cAAepJ,IAAUC,KAAKC,WAC9BwD,OAAQ1D,IAAUG,OAAOD,WACzBI,SAAUN,IAAUG,OAAOD,YAG7B,IAKeE,gBALS,SAAAC,GAAK,MAAK,CAChCqD,OAAQrD,EAAMqD,OACdpD,SAAUD,EAAMC,YAGsB,CAAE8I,chC3Ib,SAACD,EAASnL,GAAV,8CAAsB,WAAOC,GAAP,SAAAC,EAAA,+EAEzCC,IAAMC,KAAK,sBAAuB+K,GAFO,OAG/CnL,EAAQK,KAAK,UACbJ,EAAS,CACPK,KAAMT,EACNU,QAAS,KANoC,gDAS/CN,EAAS,CACPK,KAAMT,EACNU,QAAS,KAAMC,SAASC,OAXqB,yDAAtB,wDgC2Id2B,CAA4C4I,I,SC3IrDK,GAAe,SAAC,GAAD,IAAcvJ,EAAd,EAAGwJ,UAAsBhJ,EAAzB,EAAyBA,SAAaiJ,EAAtC,gDACnB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAAxK,GAAK,OACa,IAAxBsB,EAASuC,WACP,kBAAC/C,EAAcd,GAEf,kBAAC,IAAD,CAAUO,GAAG,gBAMrB8J,GAAatJ,WAAa,CACxBO,SAAUN,IAAUG,OAAOD,YAG7B,IAIeE,gBAJS,SAAAC,GAAK,MAAK,CAChCC,SAAUD,EAAMC,YAGHF,CAAyBiJ,ICpBlCI,G,kDACJ,aAAe,IAAD,8BACZ,gBACKpJ,MAAQ,CACXG,SAAU,GACVyI,SAAU,GACVvF,OAAQ,IAEV,EAAKC,SAAW,EAAKA,SAAShE,KAAd,gBAChB,EAAKiE,SAAW,EAAKA,SAASjE,KAAd,gBARJ,E,gEAYRR,KAAKH,MAAMsB,SAASuC,YACtB1D,KAAKH,MAAMhB,QAAQK,KAAK,gB,gDAIFwF,GACpBA,EAAUvD,SAASuC,YACrB1D,KAAKH,MAAMhB,QAAQK,KAAK,cAGtBwF,EAAUH,QACZvE,KAAK2E,SAAS,CAAEJ,OAAQG,EAAUH,W,+BAI7BK,GACPA,EAAEI,iBACF,IAAMuF,EAAe,CACnBlJ,SAAUrB,KAAKkB,MAAMG,SACrByI,SAAU9J,KAAKkB,MAAM4I,UAGvB9J,KAAKH,MAAM2K,MAAMD,K,+BAGV3F,GACP5E,KAAK2E,SAAL,eAAiBC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,+BAGlC,IACAR,EAAWvE,KAAKkB,MAAhBqD,OACR,OACE,yBAAKjE,UAAU,SACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,yBAAd,UACA,0BAAMmE,SAAUzE,KAAKyE,UACnB,yBAAKnE,UAAU,cACb,2BACEnB,KAAK,OACLmB,UAAW4E,IAAW,+BAAgC,CACpD,aAAcX,EAAOlD,WAEvB8D,YAAY,gBACZL,KAAK,WACLC,MAAO/E,KAAKkB,MAAMG,SAClBmD,SAAUxE,KAAKwE,WAEhBD,EAAOlD,UACN,yBAAKf,UAAU,oBAAoBiE,EAAOlD,WAG9C,yBAAKf,UAAU,cACb,2BACEnB,KAAK,WACLmB,UAAW4E,IAAW,+BAAgC,CACpD,aAAcX,EAAOuF,WAEvB3E,YAAY,WACZL,KAAK,WACLC,MAAO/E,KAAKkB,MAAM4I,SAClBtF,SAAUxE,KAAKwE,WAEhBD,EAAOuF,UACN,yBAAKxJ,UAAU,oBAAoBiE,EAAOuF,WAG9C,2BAAO3K,KAAK,SAASmB,UAAU,yC,GAjF3BK,aAsGLM,gBALS,SAAAC,GAAK,MAAK,CAChCC,SAAUD,EAAMC,SAChBoD,OAAQrD,EAAMqD,UAGwB,CAAEiG,MlCvFrB,SAACD,GAAD,8CAAkB,WAAOzL,GAAP,mBAAAC,EAAA,+EAEjBC,IAAMC,KAAK,mBAAoBsL,GAFd,OAE7B7K,EAF6B,OAG3BsC,EAAUtC,EAAIJ,KAAd0C,MAERK,aAAaoI,QAAQ,WAAYzI,GACjCD,EAAYC,GAEN0I,EAAUC,IAAW3I,GAE3BlD,EAAS,CACPK,KNnB0B,mBMoB1BC,QAASsL,IAZwB,kDAenC5L,EAAS,CACPK,KAAMT,EACNU,QAAS,KAAMC,SAASC,OAjBS,0DAAlB,wDkCuFN2B,CAAoCqJ,ICrG7CM,G,kDACJ,aAAe,IAAD,8BACZ,gBAEK1J,MAAQ,CACXG,SAAU,GACVkD,OAAQ,IAGV,EAAKC,SAAW,EAAKA,SAAShE,KAAd,gBAChB,EAAKiE,SAAW,EAAKA,SAASjE,KAAd,gBATJ,E,sEAaYkE,GACpBA,EAAUH,QACZvE,KAAK2E,SAAS,CAAEJ,OAAQG,EAAUH,W,+BAI7BK,GACP5E,KAAK2E,SAAL,eAAiBC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,+BAGnCH,GACPA,EAAEI,iBADQ,IAGF3E,EAAYL,KAAKH,MAAMgH,MAAMC,OAA7BzG,QAEFsC,EAAa,CACjBtB,SAAUrB,KAAKkB,MAAMG,SACrBqH,QAASrI,GAGXL,KAAKH,MAAMgL,WAAWlI,EAAY3C,KAAKH,MAAMhB,W,+BAGrC,IACA0F,EAAWvE,KAAKkB,MAAhBqD,OACAlE,EAAYL,KAAKH,MAAMgH,MAAMC,OAA7BzG,QAER,OACE,yBAAKC,UAAU,UACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CAAMF,GAAE,sBAAiBC,GAAWC,UAAU,iBAA9C,uBAGA,wBAAIA,UAAU,yBAAd,8BAGA,6BACA,0BAAMmE,SAAUzE,KAAKyE,UACnB,yBAAKnE,UAAU,cACb,2BACEnB,KAAK,QACLmB,UAAW4E,IAAW,gCAAiC,CACrD,aAAcX,EAAOlD,WAEvB8D,YAAY,YACZL,KAAK,WACLC,MAAO/E,KAAKkB,MAAMG,SAClBmD,SAAUxE,KAAKwE,WAEhBD,EAAOlD,UACN,yBAAKf,UAAU,oBAAoBiE,EAAOlD,WAI9C,2BACElC,KAAK,SACLmB,UAAU,4C,GAxEHK,aA4FVM,gBAJS,SAACC,GAAD,MAAY,CAClCqD,OAAQrD,EAAMqD,UAGwB,CAAEsG,WxClDhB,SAACC,EAAWjM,GAAZ,8CAAwB,WAAOC,GAAP,SAAAC,EAAA,+EAExCC,IAAMC,KAAK,wBAAyB6L,GAFI,OAG9CjM,EAAQK,KAAR,sBAA4B4L,EAAUpC,UACtC5J,EAAS,CACPK,KAAMT,EACNU,QAAS,KANmC,gDAS9CN,EAAS,CACPK,KAAMT,EACNU,QAAS,KAAMC,SAASC,OAXoB,yDAAxB,wDwCkDX2B,CAAyC2J,IC3FlDG,G,kDACJ,aAAe,IAAD,8BACZ,gBAEK7J,MAAQ,CACX8J,UAAW,GACXzG,OAAQ,IAGV,EAAKC,SAAW,EAAKA,SAAShE,KAAd,gBAChB,EAAKiE,SAAW,EAAKA,SAASjE,KAAd,gBATJ,E,sEAaYkE,GACpBA,EAAUH,QACZvE,KAAK2E,SAAS,CAAEJ,OAAQG,EAAUH,W,0CAKpCvE,KAAKH,MAAMoL,e,+BAGJrG,GACP5E,KAAK2E,SAAL,eAAiBC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,+BAGnCH,GACPA,EAAEI,iBADQ,IAGF3E,EAAYL,KAAKH,MAAMgH,MAAMC,OAA7BzG,QAERL,KAAKH,MAAMqL,aAAalL,KAAKkB,MAAM8J,UAAW3K,K,+BAGtC,IACAkE,EAAWvE,KAAKkB,MAAhBqD,OACAlE,EAAYL,KAAKH,MAAMgH,MAAMC,OAA7BzG,QACFkF,EAASvF,KAAKH,MAAM2F,MAAMD,OAEhC,OACE,yBAAKjF,UAAU,gBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CAAMF,GAAE,sBAAiBC,GAAWC,UAAU,iBAA9C,uBAGA,wBAAIA,UAAU,yBAAd,gBACA,6BACA,0BAAMmE,SAAUzE,KAAKyE,UACnB,yBAAKnE,UAAU,eACb,2BACEnB,KAAK,OACLmB,UAAW4E,IAAW,gCAAiC,CACrD,aAAcX,EAAOyG,YAEvB7F,YAAY,YACZL,KAAK,YACLC,MAAO/E,KAAKkB,MAAM8J,UAClBxG,SAAUxE,KAAKwE,WAEhBD,EAAOyG,WACN,yBAAK1K,UAAU,oBAAoBiE,EAAOyG,YAI9C,4BAAQ7L,KAAK,SAASmB,UAAU,0BAAhC,aAMN,6BACCiF,EAAO1D,KAAI,SAAC2D,GAAD,OACV,kBAAC,GAAD,CAAW1D,IAAK0D,EAAMhG,GAAIgG,MAAOA,a,GA5EpB7E,aAgGVM,gBALS,SAACC,GAAD,MAAY,CAClCsE,MAAOtE,EAAMsE,MACbjB,OAAQrD,EAAMqD,UAGwB,CAAE2G,aV9Cd,SAACC,EAAYC,GAAb,8CAA0B,WAAOtM,GAAP,eAAAC,EAAA,+EAEhCC,IAAMS,IAAN,kCACW0L,EADX,YACyBC,IAHO,OAE5C1L,EAF4C,OAKlDZ,EAAS,CACPK,KhCvDoB,agCwDpBC,QAASM,EAAIJ,OAPmC,gDAUlDR,EAAS,CACPK,KAAMT,EACNU,QAAS,KAAMC,SAASC,OAZwB,yDAA1B,uDU8C4B2L,WV7B9B,yDAAM,WAAOnM,GAAP,SAAAC,EAAA,sDAC9BD,EAAS,CACPK,KhCpEsB,agCqEtBC,QAAS,KAHmB,2CAAN,wDU6BX6B,CACb8J,IClGIM,G,kDACJ,aAAe,IAAD,8BACZ,gBAEKnK,MAAQ,CACX0G,YAAa,GACbrD,OAAQ,IAGV,EAAKC,SAAW,EAAKA,SAAShE,KAAd,gBAChB,EAAKiE,SAAW,EAAKA,SAASjE,KAAd,gBATJ,E,sEAaYkE,GACpBA,EAAUH,QACZvE,KAAK2E,SAAS,CAAEJ,OAAQG,EAAUH,W,+BAI7BK,GACP5E,KAAK2E,SAAL,eAAiBC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,+BAGnCH,GACPA,EAAEI,iBADQ,IAGF3E,EAAYL,KAAKH,MAAMgH,MAAMC,OAA7BzG,QACRL,KAAKH,MAAMyL,cACTtL,KAAKkB,MAAM0G,YACXvH,EACAL,KAAKH,MAAMhB,W,+BAIL,IACA0F,EAAWvE,KAAKkB,MAAhBqD,OACAlE,EAAYL,KAAKH,MAAMgH,MAAMC,OAA7BzG,QAER,OACE,yBAAKC,UAAU,gBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CAAMF,GAAE,sBAAiBC,GAAWC,UAAU,iBAA9C,uBAGA,wBAAIA,UAAU,yBAAd,qBACA,6BACA,0BAAMmE,SAAUzE,KAAKyE,UACnB,yBAAKnE,UAAU,eACb,2BACEnB,KAAK,OACLmB,UAAW4E,IAAW,gCAAiC,CACrD,aAAcX,EAAOqD,cAEvBzC,YAAY,YACZL,KAAK,cACLC,MAAO/E,KAAKkB,MAAM0G,YAClBpD,SAAUxE,KAAKwE,WAEhBD,EAAOqD,aACN,yBAAKtH,UAAU,oBAAoBiE,EAAOqD,cAI9C,2BACEzI,KAAK,SACLmB,UAAU,8C,GApEAK,aAwFbM,gBAJS,SAACC,GAAD,MAAY,CAClCqD,OAAQrD,EAAMqD,UAGwB,CAAE+G,clBtCb,SAACnC,EAAciC,EAAUvM,GAAzB,8CAAqC,WAChEC,GADgE,SAAAC,EAAA,+EAIxDC,IAAMC,KAAN,8BAAkCkK,EAAlC,YAAkDiC,IAJM,OAK9DtM,EAAS,CACPK,KAAMT,EACNU,QAAS,KAEXP,EAAQK,KAAR,sBAA4BkM,IATkC,gDAW9DtM,EAAS,CACPK,KAAMT,EACNU,QAAS,KAAMC,SAASC,OAboC,yDAArC,wDkBsCd2B,CAA4CoK,ICxFrDE,G,kDACJ,aAAe,IAAD,8BACZ,gBAEKrK,MAAQ,CACX8B,UAAW,GACXtC,YAAa,GACbiH,UAAW,GACX6D,cAAe,GACfC,YAAa,GACb7D,YAAa,GACbrD,OAAQ,IAGV,EAAKC,SAAW,EAAKA,SAAShE,KAAd,gBAChB,EAAKiE,SAAW,EAAKA,SAASjE,KAAd,gBAdJ,E,sEAiBYkE,GACpBA,EAAUH,QACZvE,KAAK2E,SAAS,CAAEJ,OAAQG,EAAUH,W,+BAI7BK,GACP5E,KAAK2E,SAAL,eAAiBC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,+BAGnCH,GAAI,IACHvE,EAAYL,KAAKH,MAAMgH,MAAMC,OAA7BzG,QACRuE,EAAEI,iBAEF,IAAM0G,EAAW,CACf1I,UAAWhD,KAAKkB,MAAM8B,UACtBtC,YAAaV,KAAKkB,MAAMR,YACxBiH,UAAW3H,KAAKkB,MAAMyG,UACtB6D,cAAexL,KAAKkB,MAAMsK,cAC1BC,YAAazL,KAAKkB,MAAMuK,YACxB7D,YAAa5H,KAAKkB,MAAM0G,YACxBL,aAAclH,GAGhBL,KAAKH,MAAMyH,YAAYoE,EAAU1L,KAAKH,MAAMhB,W,+BAGpC,IACA0F,EAAWvE,KAAKkB,MAAhBqD,OACAlE,EAAYL,KAAKH,MAAMgH,MAAMC,OAA7BzG,QAER,OACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CAAMF,GAAE,sBAAiBC,GAAWC,UAAU,iBAA9C,uBAGA,wBAAIA,UAAU,yBAAd,eACA,6BAEA,0CACA,0BAAMmE,SAAUzE,KAAKyE,UACnB,yBAAKnE,UAAU,cACb,2BACEnB,KAAK,OACLmB,UAAW4E,IAAW,+BAAgC,CACpD,aAAcX,EAAOvB,YAEvB8B,KAAK,YACLK,YAAY,aACZJ,MAAO/E,KAAKkB,MAAM8B,UAClBwB,SAAUxE,KAAKwE,WAEhBD,EAAOvB,WACN,yBAAK1C,UAAU,oBAAoBiE,EAAOvB,YAI9C,2CACA,yBAAK1C,UAAU,cACb,8BACEA,UAAW4E,IAAW,gCAAiC,CACrD,aAAcX,EAAO7D,cAEvByE,YAAY,oBACZL,KAAK,cACLC,MAAO/E,KAAKkB,MAAMR,YAClB8D,SAAUxE,KAAKwE,WAEhBD,EAAO7D,aACN,yBAAKJ,UAAU,oBAAoBiE,EAAO7D,cAI9C,8FAGA,yBAAKJ,UAAU,cACb,2BACEnB,KAAK,OACLmB,UAAW4E,IAAW,gCAAiC,CACrD,aAAcX,EAAOqD,cAEvBzC,YAAY,gBACZL,KAAK,cACLC,MAAO/E,KAAKkB,MAAM0G,YAClBpD,SAAUxE,KAAKwE,WAEhBD,EAAOqD,aACN,yBAAKtH,UAAU,oBAAoBiE,EAAOqD,cAI9C,8EACA,yBAAKtH,UAAU,cACb,2BACEnB,KAAK,OACLmB,UAAW4E,IAAW,gCAAiC,CACrD,aAAcX,EAAOoD,YAEvBxC,YAAY,mBACZL,KAAK,YACLC,MAAO/E,KAAKkB,MAAMyG,UAClBnD,SAAUxE,KAAKwE,WAEhBD,EAAOoD,WACN,yBAAKrH,UAAU,oBAAoBiE,EAAOoD,YAI9C,mFACA,yBAAKrH,UAAU,cACb,2BACEnB,KAAK,OACLmB,UAAW4E,IAAW,gCAAiC,CACrD,aAAcX,EAAOiH,gBAEvBrG,YAAY,mBACZL,KAAK,gBACLC,MAAO/E,KAAKkB,MAAMsK,cAClBhH,SAAUxE,KAAKwE,WAEhBD,EAAOiH,eACN,yBAAKlL,UAAU,oBACZiE,EAAOiH,gBAKd,iFACA,yBAAKlL,UAAU,cACb,2BACEnB,KAAK,OACLmB,UAAW4E,IAAW,gCAAiC,CACrD,aAAcX,EAAOkH,cAEvBtG,YAAY,mBACZL,KAAK,cACLC,MAAO/E,KAAKkB,MAAMuK,YAClBjH,SAAUxE,KAAKwE,WAEhBD,EAAOkH,aACN,yBAAKnL,UAAU,oBAAoBiE,EAAOkH,cAI9C,2BACEtM,KAAK,SACLmB,UAAU,4C,GAxKLK,aAmLvB4K,GAAS3K,WAAa,CACpB2D,OAAQ1D,IAAUG,OAAOD,WACzBuG,YAAazG,IAAUC,KAAKC,YAG9B,IAIeE,gBAJS,SAACC,GAAD,MAAY,CAClCqD,OAAQrD,EAAMqD,UAGwB,CAAE+C,gBAA3BrG,CAA0CsK,IC5LnDI,G,kDACJ,aAAe,IAAD,8BACZ,gBAEKzK,MAAQ,CACX8B,UAAW,GACXtC,YAAa,GACbiH,UAAW,GACX6D,cAAe,GACfC,YAAa,GACb7D,YAAa,GACbL,aAAc,GACdhD,OAAQ,IAGV,EAAKC,SAAW,EAAKA,SAAShE,KAAd,gBAChB,EAAKiE,SAAW,EAAKA,SAASjE,KAAd,gBAfJ,E,sEAkBYkE,GACpBA,EAAUH,QACZvE,KAAK2E,SAAS,CAAEJ,OAAQG,EAAUH,SAFD,MAc/BG,EAAUiB,MARZnG,EANiC,EAMjCA,GACAwD,EAPiC,EAOjCA,UACAtC,EARiC,EAQjCA,YACAiH,EATiC,EASjCA,UACA6D,EAViC,EAUjCA,cACAC,EAXiC,EAWjCA,YACA7D,EAZiC,EAYjCA,YACAL,EAbiC,EAajCA,aAGFvH,KAAK2E,SAAS,CACZnF,KACAwD,YACAtC,cACAiH,YACA6D,gBACAC,cACA7D,cACAL,mB,0CAIiB,IACXqE,EAAY5L,KAAKH,MAAMgH,MAAMC,OAA7B8E,QACR5L,KAAKH,MAAM2H,SAASoE,EAAS5L,KAAKH,MAAMhB,W,+BAGjC+F,GACP5E,KAAK2E,SAAL,eAAiBC,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,+BAGnCH,GACPA,EAAEI,iBAEF,IAAM0G,EAAW,CACflM,GAAIQ,KAAKkB,MAAM1B,GACfwD,UAAWhD,KAAKkB,MAAM8B,UACtBtC,YAAaV,KAAKkB,MAAMR,YACxB8K,cAAexL,KAAKkB,MAAMsK,cAC1BC,YAAazL,KAAKkB,MAAMuK,YACxB7D,YAAa5H,KAAKkB,MAAM0G,YACxBD,UAAW3H,KAAKkB,MAAMyG,UACtBJ,aAAcvH,KAAKkB,MAAMqG,cAG3BvH,KAAKH,MAAMyH,YAAYoE,EAAU1L,KAAKH,MAAMhB,W,+BAGpC,IACA0F,EAAWvE,KAAKkB,MAAhBqD,OAER,OACE,yBAAKjE,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CACEF,GAAE,sBAAiBJ,KAAKkB,MAAMqG,cAC9BjH,UAAU,iBAFZ,uBAMA,wBAAIA,UAAU,yBAAd,eACA,6BAEA,0CACA,0BAAMmE,SAAUzE,KAAKyE,UACnB,yBAAKnE,UAAU,cACb,2BACEnB,KAAK,OACLmB,UAAW4E,IAAW,+BAAgC,CACpD,aAAcX,EAAOvB,YAEvB8B,KAAK,YACLK,YAAY,aACZJ,MAAO/E,KAAKkB,MAAM8B,UAClBwB,SAAUxE,KAAKwE,WAEhBD,EAAOvB,WACN,yBAAK1C,UAAU,oBAAoBiE,EAAOvB,YAI9C,2CACA,yBAAK1C,UAAU,cACb,8BACEA,UAAW4E,IAAW,gCAAiC,CACrD,aAAcX,EAAO7D,cAEvByE,YAAY,oBACZL,KAAK,cACLC,MAAO/E,KAAKkB,MAAMR,YAClB8D,SAAUxE,KAAKwE,WAEhBD,EAAO7D,aACN,yBAAKJ,UAAU,oBAAoBiE,EAAO7D,cAI9C,8FAGA,yBAAKJ,UAAU,cACb,2BACEnB,KAAK,OACLmB,UAAW4E,IAAW,gCAAiC,CACrD,aAAcX,EAAOqD,cAEvBzC,YAAY,gBACZL,KAAK,cACLC,MAAO/E,KAAKkB,MAAM0G,YAClBpD,SAAUxE,KAAKwE,SACfwC,UAAQ,IAETzC,EAAOqD,aACN,yBAAKtH,UAAU,oBAAoBiE,EAAOqD,cAI9C,8EACA,yBAAKtH,UAAU,cACb,2BACEnB,KAAK,OACLmB,UAAW4E,IAAW,gCAAiC,CACrD,aAAcX,EAAOoD,YAEvBxC,YAAY,mBACZL,KAAK,YACLC,MAAO/E,KAAKkB,MAAMyG,UAClBnD,SAAUxE,KAAKwE,SACfwC,UAAQ,IAETzC,EAAOoD,WACN,yBAAKrH,UAAU,oBAAoBiE,EAAOoD,YAI9C,mFACA,yBAAKrH,UAAU,cACb,2BACEnB,KAAK,OACLmB,UAAW4E,IAAW,gCAAiC,CACrD,aAAcX,EAAOiH,gBAEvBrG,YAAY,mBACZL,KAAK,gBACLC,MAAO/E,KAAKkB,MAAMsK,cAClBhH,SAAUxE,KAAKwE,WAEhBD,EAAOiH,eACN,yBAAKlL,UAAU,oBACZiE,EAAOiH,gBAKd,iFACA,yBAAKlL,UAAU,cACb,2BACEnB,KAAK,OACLmB,UAAW4E,IAAW,gCAAiC,CACrD,aAAcX,EAAOkH,cAEvBtG,YAAY,mBACZL,KAAK,cACLC,MAAO/E,KAAKkB,MAAMuK,YAClBjH,SAAUxE,KAAKwE,WAEhBD,EAAOkH,aACN,yBAAKnL,UAAU,oBAAoBiE,EAAOkH,cAI9C,2BACEtM,KAAK,SACLmB,UAAU,4C,GAxMFK,aAmN1BgL,GAAY/K,WAAa,CACvB2D,OAAQ1D,IAAUG,OAAOD,WACzBuG,YAAazG,IAAUC,KAAKC,WAC5ByG,SAAU3G,IAAUC,KAAKC,WACzB4E,MAAO9E,IAAUG,OAAOD,YAG1B,IAKeE,gBALS,SAACC,GAAD,MAAY,CAClCyE,MAAOzE,EAAMyE,MAAMA,MACnBpB,OAAQrD,EAAMqD,UAGwB,CAAE+C,eAAaE,aAAxCvG,CAAoD0K,ICjO7DE,G,4MACJC,YAAc,SAACC,EAASC,GACtB,EAAKnM,MAAMoM,KAAKF,EAASC,I,uDAIzB,IASIE,EATE1G,EAAQxF,KAAKH,MAAM2F,MACnB2G,EAAQnM,KAAKH,MAAMsM,MACnBJ,EAAU/L,KAAKH,MAAMkM,QACrBN,EAAczL,KAAKH,MAAM4L,YACzBD,EAAgBxL,KAAKH,MAAM2L,cAE7BvD,EAAc,IAAIC,KAClBkE,EAAY,IAAIlE,KAAKsD,GACrBa,EAAU,IAAInE,KAAKuD,GAgBvB,GAZES,EADEjE,EAAcmE,GAAanE,EAAcoE,EAEzC,4BACE/L,UAAU,sBACVC,QAASP,KAAK8L,YAAYtL,KAAKR,KAAM+L,EAASvG,EAAMhG,KAFtD,QAQW,GAGXiM,EACF,OACE,yBAAKnL,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,4BAAf,SACSkF,EAAMV,MAEf,yBAAKxE,UAAU,sBACb,wBAAIA,UAAU,cAAd,gBACgBkF,EAAM9E,aAGtB,4BACE,uBAAG8C,KAAMgC,EAAM4D,YAAf,sBAEF,4BACE,uBAAG5F,KAAMgC,EAAM4D,YAAf,wBAMR,yBAAK9I,UAAU,SACb,8CAAoB6L,IAGtB,yBAAK7L,UAAU,SAAS4L,S,GA1DbvL,aAiEvBkL,GAASjL,WAAa,CACpB+E,MAAO9E,IAAUG,OAAOD,WACxBkL,KAAMpL,IAAUC,KAAKC,YAGvB,IAIeE,gBAJS,SAACC,GAAD,MAAY,CAClCyE,MAAOzE,EAAMyE,MAAMA,SAGmB,CAAEsG,KnBtDtB,SAACF,EAASC,GAAV,8CAAsB,WAAOlN,GAAP,eAAAC,EAAA,mEAElCuC,OAAOC,QAAQ,oCAFmB,gCAGlBvC,IAAMC,KAAN,0BAA8B8M,EAA9B,YAAyCC,IAHvB,OAG9BtM,EAH8B,OAIpCZ,EAAS,CACPK,K3BTiB,Y2BUjBC,QAASM,EAAIJ,OANqB,uDAUtCR,EAAS,CACPK,KAAMT,EACNU,QAAS,KAAMC,SAASC,OAZY,yDAAtB,wDmBsDL2B,CAAmC4K,ICtE5CS,G,kLACiB,IAAD,EACetM,KAAKH,MAAMgH,MAAMC,OAA1C8E,EADU,EACVA,QAAShE,EADC,EACDA,YACjB5H,KAAKH,MAAM2H,SAASoE,EAAS5L,KAAKH,MAAMhB,SACxCmB,KAAKH,MAAMqH,aAAaU,GACxB5H,KAAKH,MAAMoJ,UAAUrB,GACrB5H,KAAKH,MAAM0M,UAAUX,K,+BAIrB,IAQIY,EAREjH,EAASvF,KAAKH,MAAM0F,OACpBI,EAAQ3F,KAAKH,MAAM8F,MACnBL,EAAYtF,KAAKH,MAAMyF,UACvBmH,EAAczM,KAAKH,MAAM2F,MA8B/B,OAtBEgH,EANgB,IAAItE,KACJ,IAAIA,KAAKvC,EAAM8F,aAM7B,6BACE,6BACA,+CACA,kBAAC,GAAD,CACE3J,IAAK2K,EAAYjN,GACjBgG,MAAOiH,EACPN,MACExG,EAAM+G,OAAOD,EAAYjN,IAAMmG,EAAM+G,OAAOD,EAAYjN,IAAM,EAEhEuM,QAASpG,EAAMnG,GACfiM,YAAa9F,EAAM8F,YACnBD,cAAe7F,EAAM6F,gBAEvB,6BACA,kEAIK,GAIT,yBAAKlL,UAAU,kBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CACEF,GAAE,sBAAiBuF,EAAM4B,cACzBjH,UAAU,iBAFZ,uBAMA,wBAAIA,UAAU,yBAAyBqF,EAAM3C,WAC7C,wBAAI1C,UAAU,eAAeqF,EAAMjF,aAEnC,6BACA,6BACA,6EAEG4E,EAAU+B,cAFb,KAIA,2CAAiB1B,EAAMgC,WACvB,4CAAkBhC,EAAM6F,eACxB,0CAAgB7F,EAAM8F,aAErBe,EACD,6BACCjH,EAAO1D,KAAI,SAAC2D,GAAD,OACV,kBAAC,GAAD,CACE1D,IAAK0D,EAAMhG,GACXgG,MAAOA,EACP2G,MAAOxG,EAAM+G,OAAOlH,EAAMhG,IAAMmG,EAAM+G,OAAOlH,EAAMhG,IAAM,EACzDuM,QAASpG,EAAMnG,GACfiM,YAAa9F,EAAM8F,YACnBD,cAAe7F,EAAM6F,2B,GA5Ef7K,aAuFxB2L,GAAU1L,WAAa,CACrBsG,aAAcrG,IAAUC,KAAKC,WAC7BuE,UAAWzE,IAAUG,OAAOD,WAC5BwE,OAAQ1E,IAAUG,OAAOD,WACzB4E,MAAO9E,IAAUG,OAAOD,WACxByG,SAAU3G,IAAUC,KAAKC,WACzBwL,UAAW1L,IAAUC,KAAKC,WAC1ByE,MAAO3E,IAAUG,OAAOD,YAG1B,IAOeE,gBAPS,SAACC,GAAD,MAAY,CAClCoE,UAAWpE,EAAMoE,UAAUA,UAC3BC,OAAQrE,EAAMsE,MAAMD,OACpBI,MAAOzE,EAAMyE,MAAMA,MACnBH,MAAOtE,EAAMsE,MAAMA,SAGmB,CACtC0B,gBACA+B,aACAzB,YACA+E,UpB3EuB,SAACR,GAAD,8CAAa,WAAOjN,GAAP,eAAAC,EAAA,sEAClBC,IAAMS,IAAN,4BAA+BsM,IADb,OAC9BrM,EAD8B,OAEpCZ,EAAS,CACPK,K3BnCqB,Y2BoCrBC,QAASM,EAAIJ,OAJqB,2CAAb,wDoBuEV2B,CAKZqL,ICvFGK,GAAWtK,aAAasK,SAE9B,GAAIA,GAAU,CACZ5K,EAAY4K,IACZ,IAAMjC,GAAUC,IAAWgC,IAC3BvG,GAAMtH,SAAS,CACbK,KhDxB4B,mBgDyB5BC,QAASsL,KAGX,IAAMzC,GAAcC,KAAK0E,MAAQ,IAC7BlC,GAAQmC,IAAM5E,KAChB7B,GAAMtH,SAASsD,KACfd,OAAOiC,SAASC,KAAO,KAsFZsJ,OAlFf,WACE,OACE,kBAAC,IAAD,CAAU1G,MAAOA,IACf,kBAAC,IAAD,KACE,yBAAK9F,UAAU,OACb,kBAAC,EAAD,MAEA,kBAAC,IAAD,CAAOyM,OAAK,EAACC,KAAK,IAAI7C,UAAWP,KACjC,kBAAC,IAAD,CAAOmD,OAAK,EAACC,KAAK,YAAY7C,UAAWN,KACzC,kBAAC,IAAD,CAAOkD,OAAK,EAACC,KAAK,SAAS7C,UAAWG,KAEtC,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAcyC,OAAK,EAACC,KAAK,aAAa7C,UAAWzI,IACjD,kBAAC,GAAD,CAAcqL,OAAK,EAACC,KAAK,YAAY7C,UAAW7F,IAChD,kBAAC,GAAD,CACEyI,OAAK,EACLC,KAAK,mBACL7C,UAAWvD,KAEb,kBAAC,GAAD,CAAcmG,OAAK,EAACC,KAAK,kBAAkB7C,UAAWtC,KACtD,kBAAC,GAAD,CACEkF,OAAK,EACLC,KAAK,+BACL7C,UAAWxB,KAEb,kBAAC,GAAD,CACEoE,OAAK,EACLC,KAAK,kCACL7C,UAAWrB,KAEb,kBAAC,GAAD,CACEiE,OAAK,EACLC,KAAK,4CACL7C,UAAWb,KAEb,kBAAC,GAAD,CACEyD,OAAK,EACLC,KAAK,qDACL7C,UAAWZ,KAEb,kBAAC,GAAD,CACEwD,OAAK,EACLC,KAAK,sEACL7C,UAAWT,KAEb,kBAAC,GAAD,CACEqD,OAAK,EACLC,KAAK,4CACL7C,UAAWS,KAEb,kBAAC,GAAD,CACEmC,OAAK,EACLC,KAAK,kCACL7C,UAAWY,KAEb,kBAAC,GAAD,CACEgC,OAAK,EACLC,KAAK,qCACL7C,UAAWkB,KAEb,kBAAC,GAAD,CACE0B,OAAK,EACLC,KAAK,gCACL7C,UAAWoB,KAEb,kBAAC,GAAD,CACEwB,OAAK,EACLC,KAAK,mCACL7C,UAAWwB,KAEb,kBAAC,GAAD,CACEoB,OAAK,EACLC,KAAK,8CACL7C,UAAWmC,UC7GLW,QACW,cAA7B3L,OAAOiC,SAAS2J,UAEe,UAA7B5L,OAAOiC,SAAS2J,UAEhB5L,OAAOiC,SAAS2J,SAASrG,MACvB,2DCZNsG,IAAS9C,OACP,kBAAC,IAAM+C,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBjH,WACrBA,UAAUkH,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.d6495454.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_GROUPS = \"GET_GROUPS\";\r\nexport const GET_GROUP = \"GET_GROUP\";\r\nexport const DELETE_GROUP = \"DELETE_GROUP\";\r\n\r\nexport const GET_MOVIELISTS = \"GET_MOVIELISTS\";\r\nexport const GET_MOVIELIST = \"GET_MOVIELIST\";\r\nexport const DELETE_MOVIELIST = \"DELETE_MOVIELIST\";\r\n\r\nexport const GET_MOVIES = \"GET_MOVIES\";\r\nexport const GET_MOVIE = \"GET_MOVIE\";\r\nexport const DELETE_MOVIE = \"DELETE_MOVIE\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n\r\nexport const GET_INVITATIONS = \"GET_INVITATIONS\";\r\nexport const GET_INVITATION = \"GET_INVITATION\";\r\nexport const DELETE_INVITATION = \"DELETE_INVITATION\";\r\nexport const ACCEPT_INVITATION = \"ACCEPT_INVITATION\";\r\n\r\nexport const GET_EVENTS = \"GET_EVENTS\";\r\nexport const GET_EVENT = \"GET_EVENT\";\r\nexport const DELETE_EVENT = \"DELETE_EVENT\";\r\n\r\nexport const GET_EVENTNOTIFICATIONS = \"GET_EVENTNOTIFICATIONS\";\r\nexport const DELETE_EVENTNOTIFICATION = \"DELETE_EVENTNOTIFICATION\";\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_GROUPS, GET_GROUP, DELETE_GROUP } from \"./types\";\r\n\r\nexport const createGroup = (group, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/group\", group);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getGroups = () => async (dispatch) => {\r\n  const res = await axios.get(\"/api/group/groups\");\r\n  dispatch({\r\n    type: GET_GROUPS,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\nexport const getGroup = (id, history) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/group/${id}`);\r\n    dispatch({\r\n      type: GET_GROUP,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteGroup = (id) => async (dispatch) => {\r\n  if (window.confirm(\"Are you sure to delete this group?\")) {\r\n    await axios.delete(`/api/group/${id}`);\r\n    dispatch({\r\n      type: DELETE_GROUP,\r\n      payload: id,\r\n    });\r\n  }\r\n};\r\n\r\nexport const inviteUser = (inviation, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/group/inviteUser\", inviation);\r\n    history.push(`/groupBoard/${inviation.groupId}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteGroup } from \"../../actions/groupActions\";\r\n\r\nclass GroupView extends Component {\r\n  onDeleteClick = (id) => {\r\n    this.props.deleteGroup(id);\r\n  };\r\n\r\n  render() {\r\n    const { group } = this.props;\r\n\r\n    const currentUser = this.props.currentUser;\r\n    const moderator = group.moderator;\r\n\r\n    let create;\r\n\r\n    if (currentUser === moderator) {\r\n      create = (\r\n        <React.Fragment>\r\n          <Link to={`/updateGroup/${group.groupID}`}>\r\n            <li className=\"list-group-item update\">\r\n              <i className=\"fa fa-edit pr-1\"> Update Group Info</i>\r\n            </li>\r\n          </Link>\r\n\r\n          <li\r\n            className=\"list-group-item delete\"\r\n            onClick={this.onDeleteClick.bind(this, group.groupID)}\r\n          >\r\n            <i className=\"fa fa-minus-circle pr-1\"> Delete Group</i>\r\n          </li>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      create = \"\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{group.groupID}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{group.groupName}</h3>\r\n              <p>{group.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/groupBoard/${group.groupID}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Group Board </i>\r\n                  </li>\r\n                </Link>\r\n                {create}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nGroupView.protoTypes = {\r\n  deleteGroup: PropTypes.func.isRequired,\r\n  currentUser: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  currentUser: state.security.user.username,\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteGroup })(GroupView);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateGroupButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addGroup\" className=\"btn btn-lg btn-info\">\r\n        Create a Group\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateGroupButton;\r\n","import React, { Component } from \"react\";\r\nimport GroupView from \"./Group/GroupView\";\r\nimport CreateGroupButton from \"./Group/CreateGroupButton\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getGroups } from \"../actions/groupActions\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getGroups();\r\n  }\r\n\r\n  render() {\r\n    const { groups } = this.props.group;\r\n    return (\r\n      <div className=\"groups\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Groups</h1>\r\n              <br />\r\n              <CreateGroupButton />\r\n\r\n              <br />\r\n              <hr />\r\n\r\n              {groups.map(group => (\r\n                <GroupView key={group.id} group={group} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.protoTypes = {\r\n  group: PropTypes.object.isRequired,\r\n  getGroups: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  group: state.group\r\n});\r\n\r\nexport default connect(mapStateToProps, { getGroups })(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (LoginRequest) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n    const { token } = res.data;\r\n\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    setJWTToken(token);\r\n\r\n    const decoded = jwt_decode(token);\r\n\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {},\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  deleteInvitation,\r\n  accpetInvitation,\r\n} from \"../../actions/invitationActions\";\r\n\r\nclass Invitation extends Component {\r\n  onDeleteClick = (id) => {\r\n    this.props.deleteInvitation(id);\r\n  };\r\n\r\n  onAcceptClick = (id) => {\r\n    this.props.accpetInvitation(id);\r\n  };\r\n\r\n  render() {\r\n    const { invitation } = this.props;\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className=\"card-body bg-light\">\r\n          {invitation.inviterName} invite you to join in his group{\" \"}\r\n          <button\r\n            className=\"far fa-check-circle\"\r\n            onClick={this.onAcceptClick.bind(this, invitation.id)}\r\n          >\r\n            Accept\r\n          </button>\r\n          <button\r\n            className=\"fas fa-times\"\r\n            onClick={this.onDeleteClick.bind(this, invitation.id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nInvitation.protoTypes = {\r\n  deleteInvitation: PropTypes.func.isRequired,\r\n  accpetInvitation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteInvitation, accpetInvitation })(\r\n  Invitation\r\n);\r\n","import axios from \"axios\";\r\nimport { GET_INVITATIONS, ACCEPT_INVITATION, DELETE_INVITATION } from \"./types\";\r\n\r\nexport const getInvitations = () => async (dispatch) => {\r\n  const res = await axios.get(\"/api/user/invitations\");\r\n  dispatch({\r\n    type: GET_INVITATIONS,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\nexport const accpetInvitation = (id) => async (dispatch) => {\r\n  await axios.post(`/api/group/addUser/${id}`);\r\n  dispatch({\r\n    type: ACCEPT_INVITATION,\r\n    payload: id,\r\n  });\r\n};\r\n\r\nexport const deleteInvitation = (id) => async (dispatch) => {\r\n  if (window.confirm(\"Are you sure to delete this invitaion?\")) {\r\n    await axios.delete(`/api/user/invitation/${id}`);\r\n    dispatch({\r\n      type: DELETE_INVITATION,\r\n      payload: id,\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteEventNotification } from \"../../actions/eventNotificationActions\";\r\n\r\nclass EventNotification extends Component {\r\n  onDeleteClick = (id) => {\r\n    this.props.deleteEventNotification(id);\r\n  };\r\n\r\n  render() {\r\n    const { notification } = this.props;\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className=\"card-body bg-light\">\r\n          In your group {notification.groupName} have a new event created:{\" \"}\r\n          {notification.eventName}\r\n          <br />\r\n          <button\r\n            className=\"fas fa-times\"\r\n            onClick={this.onDeleteClick.bind(this, notification.id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEventNotification.protoTypes = {\r\n  deleteEventNotification: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteEventNotification })(EventNotification);\r\n","import axios from \"axios\";\r\nimport { GET_EVENTNOTIFICATIONS, DELETE_EVENTNOTIFICATION } from \"./types\";\r\n\r\nexport const getEventNotifications = () => async (dispatch) => {\r\n  const res = await axios.get(\"/api/user/eventNotifications\");\r\n  dispatch({\r\n    type: GET_EVENTNOTIFICATIONS,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\nexport const deleteEventNotification = (id) => async (dispatch) => {\r\n  if (window.confirm(\"Are you sure to delete this notification?\")) {\r\n    await axios.delete(`/api/user/eventNotification/${id}`);\r\n    dispatch({\r\n      type: DELETE_EVENTNOTIFICATION,\r\n      payload: id,\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Invitation from \"./Invitation\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getInvitations } from \"../../actions/invitationActions\";\r\nimport { getEventNotifications } from \"../../actions/eventNotificationActions\";\r\nimport EventNotification from \"./EventNotification\";\r\n\r\nclass Message extends Component {\r\n  componentDidMount() {\r\n    this.props.getInvitations();\r\n    this.props.getEventNotifications();\r\n  }\r\n\r\n  render() {\r\n    const invitations = this.props.invitation.invitations;\r\n    const notifications = this.props.notifications;\r\n\r\n    return (\r\n      <div>\r\n        {invitations.map((invitation) => (\r\n          <Invitation key={invitation.id} invitation={invitation} />\r\n        ))}\r\n\r\n        {notifications.map((notification) => (\r\n          <EventNotification\r\n            key={notification.id}\r\n            notification={notification}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMessage.propTypes = {\r\n  invitation: PropTypes.object.isRequired,\r\n  getEventNotifications: PropTypes.func.isRequired,\r\n  getInvitations: PropTypes.func.isRequired,\r\n  notifications: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  invitation: state.invitation,\r\n  notifications: state.notification.notifications,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getInvitations,\r\n  getEventNotifications,\r\n})(Message);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Message from \"./Message\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1\" />\r\n              {user.fullName}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <DropdownButton\r\n              id=\"dropdown-item-button\"\r\n              className=\"fas fa-bell\"\r\n              variant=\"primary\"\r\n              title=\"Message\"\r\n              size=\"sm\"\r\n            >\r\n              <Dropdown.Item>\r\n                <Message />\r\n              </Dropdown.Item>\r\n            </DropdownButton>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Movie Watcher Group Website\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n","import React, { Component } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createGroup } from \"../../actions/groupActions\";\r\n\r\nclass AddGroup extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      groupName: \"\",\r\n      groupID: \"\",\r\n      description: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newGroup = {\r\n      groupName: this.state.groupName,\r\n      groupID: this.state.groupID,\r\n      description: this.state.description\r\n    };\r\n    this.props.createGroup(newGroup, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"group\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Create Group form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.groupName\r\n                    })}\r\n                    placeholder=\"Group Name\"\r\n                    name=\"groupName\"\r\n                    value={this.state.groupName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.groupName && (\r\n                    <div className=\"invalid-feedback\">{errors.groupName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.groupID\r\n                    })}\r\n                    placeholder=\"Unique Group ID\"\r\n                    name=\"groupID\"\r\n                    value={this.state.groupID}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.groupID && (\r\n                    <div className=\"invalid-feedback\">{errors.groupID}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Group Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddGroup.propTypes = {\r\n  createGroup: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { createGroup })(AddGroup);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_GROUPS, GET_GROUP, DELETE_GROUP } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  groups: [],\r\n  group: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_GROUPS:\r\n      return {\r\n        ...state,\r\n        groups: action.payload\r\n      };\r\n\r\n    case GET_GROUP:\r\n      return {\r\n        ...state,\r\n        group: action.payload\r\n      };\r\n\r\n    case DELETE_GROUP:\r\n      return {\r\n        ...state,\r\n        groups: state.groups.filter(group => group.groupID !== action.payload)\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_MOVIELIST,\r\n  GET_MOVIELISTS,\r\n  DELETE_MOVIELIST\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  movieLists: [],\r\n  movieList: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_MOVIELISTS:\r\n      return {\r\n        ...state,\r\n        movieLists: action.payload\r\n      };\r\n\r\n    case GET_MOVIELIST:\r\n      return {\r\n        ...state,\r\n        movieList: action.payload\r\n      };\r\n\r\n    case DELETE_MOVIELIST:\r\n      return {\r\n        ...state,\r\n        movieLists: state.movieLists.filter(\r\n          movieList => movieList.id !== action.payload\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_MOVIE, GET_MOVIES, DELETE_MOVIE } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  movies: [],\r\n  movie: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_MOVIES:\r\n      return {\r\n        ...state,\r\n        movies: action.payload\r\n      };\r\n\r\n    case GET_MOVIE:\r\n      return {\r\n        ...state,\r\n        movie: action.payload\r\n      };\r\n\r\n    case DELETE_MOVIE:\r\n      return {\r\n        ...state,\r\n        movies: state.movies.filter(movie => movie.id !== action.payload)\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  validToken: false,\r\n  user: {}\r\n};\r\n\r\nconst booleanActionPayload = payload => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_INVITATIONS,\r\n  DELETE_INVITATION,\r\n  GET_INVITATION,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  invitations: [],\r\n  invitation: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_INVITATIONS:\r\n      return {\r\n        ...state,\r\n        invitations: action.payload,\r\n      };\r\n\r\n    case GET_INVITATION:\r\n      return {\r\n        ...state,\r\n        invitation: state.invitations.filter(\r\n          (invitation) => invitation.id !== action.payload\r\n        ),\r\n      };\r\n\r\n    case DELETE_INVITATION:\r\n      return {\r\n        ...state,\r\n        invitations: state.invitations.filter(\r\n          (invitation) => invitation.id !== action.payload\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_EVENT, GET_EVENTS, DELETE_EVENT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  events: [],\r\n  event: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_EVENTS:\r\n      return {\r\n        ...state,\r\n        events: action.payload,\r\n      };\r\n\r\n    case GET_EVENT:\r\n      return {\r\n        ...state,\r\n        event: action.payload,\r\n      };\r\n\r\n    case DELETE_EVENT:\r\n      return {\r\n        ...state,\r\n        events: state.events.filter((event) => event.id !== action.payload),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_EVENTNOTIFICATIONS,\r\n  DELETE_EVENTNOTIFICATION,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  notifications: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_EVENTNOTIFICATIONS:\r\n      return {\r\n        ...state,\r\n        notifications: action.payload,\r\n      };\r\n\r\n    case DELETE_EVENTNOTIFICATION:\r\n      return {\r\n        ...state,\r\n        notifications: state.notifications.filter(\r\n          (notification) => notification.id !== action.payload\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorRedcuer from \"./errorReducer\";\r\nimport groupReducer from \"./groupReducer\";\r\nimport movieListReducer from \"./movieListReducer\";\r\nimport movieReducer from \"./movieReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\nimport invitationReducer from \"./invitationReducer\";\r\nimport eventReducer from \"./eventReducer\";\r\nimport eventNotificationReducer from \"./eventNotificationReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorRedcuer,\r\n  group: groupReducer,\r\n  movieList: movieListReducer,\r\n  movie: movieReducer,\r\n  security: securityReducer,\r\n  invitation: invitationReducer,\r\n  event: eventReducer,\r\n  notification: eventNotificationReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initalState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { getGroup, createGroup } from \"../../actions/groupActions\";\r\n\r\nclass UpdateGroup extends Component {\r\n  //set state\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      groupName: \"\",\r\n      groupID: \"\",\r\n      description: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const { id, groupName, groupID, description } = nextProps.group;\r\n\r\n    this.setState({\r\n      id,\r\n      groupName,\r\n      groupID,\r\n      description\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getGroup(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const updateGroup = {\r\n      id: this.state.id,\r\n      groupName: this.state.groupName,\r\n      groupID: this.state.groupID,\r\n      description: this.state.description\r\n    };\r\n\r\n    this.props.createGroup(updateGroup, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"group\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Group form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.groupName\r\n                    })}\r\n                    placeholder=\"Group Name\"\r\n                    name=\"groupName\"\r\n                    value={this.state.groupName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.groupName && (\r\n                    <div className=\"invalid-feedback\">{errors.groupName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Unique Group ID\"\r\n                    name=\"groupID\"\r\n                    value={this.state.groupID}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Group Description\"\r\n                    name=\"description\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.description}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateGroup.protoTypes = {\r\n  getGroup: PropTypes.func.isRequired,\r\n  createGroup: PropTypes.func.isRequired,\r\n  group: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  group: state.group.group,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getGroup, createGroup })(UpdateGroup);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_MOVIELISTS,\r\n  GET_MOVIELIST,\r\n  DELETE_MOVIELIST,\r\n} from \"./types\";\r\n\r\nexport const createMovieList = (id, movieList, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(`/api/movielist/${id}`, movieList);\r\n    history.push(`/groupBoard/${id}`);\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getMovieLists = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/movielist/all/${id}`);\r\n    dispatch({\r\n      type: GET_MOVIELISTS,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getMovieList = (id, history) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/movielist/${id}`);\r\n    dispatch({\r\n      type: GET_MOVIELIST,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteMovieList = (id) => async (dispatch) => {\r\n  if (window.confirm(\"Are you sure to delete this movie list?\")) {\r\n    await axios.delete(`/api/movielist/${id}`);\r\n    dispatch({\r\n      type: DELETE_MOVIELIST,\r\n      payload: id,\r\n    });\r\n  }\r\n};\r\n\r\nexport const pullMovieList = (movieList_id, group_id, history) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    await axios.post(`/api/movielist/pull/${movieList_id}/${group_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n    history.push(`/groupBoard/${group_id}`);\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteMovieList } from \"../../../../actions/movieListActions\";\r\n\r\nclass MovieListItem extends Component {\r\n  onDeleteClick = (id) => {\r\n    this.props.deleteMovieList(id);\r\n  };\r\n\r\n  render() {\r\n    const { movieList } = this.props;\r\n\r\n    const currentUser = this.props.currentUser;\r\n    const moderator = this.props.moderator;\r\n\r\n    let create;\r\n\r\n    if (currentUser === moderator) {\r\n      create = (\r\n        <React.Fragment>\r\n          <Link\r\n            to={`/groupBoard/updateMovieList/${movieList.id}`}\r\n            className=\"btn btn-info ml-4\"\r\n          >\r\n            Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={this.onDeleteClick.bind(this, movieList.id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      create = \"\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className=\"card-header text-primary\">ID: {movieList.id}</div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">Name : {movieList.movieListName}</h5>\r\n          <p className=\"card-text text-truncate \">{movieList.description}</p>\r\n          <Link\r\n            to={`/groupBoard/movieListBoard/${movieList.id}/${moderator}`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View\r\n          </Link>\r\n\r\n          {create}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMovieListItem.protoTypes = {\r\n  deleteMovieList: PropTypes.func.isRequired,\r\n  moderator: PropTypes.object.isRequired,\r\n  currentUser: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  currentUser: state.security.user.username,\r\n  moderator: state.group.group.moderator,\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteMovieList })(MovieListItem);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_EVENT,\r\n  GET_EVENTS,\r\n  DELETE_EVENT,\r\n  GET_MOVIE,\r\n} from \"./types\";\r\n\r\nexport const createEvent = (event, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/event\", event);\r\n    history.push(`/groupBoard/${event.eventGroupId}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const vote = (eventId, movieId) => async (dispatch) => {\r\n  try {\r\n    if (window.confirm(\"Are you sure to vote this movie?\")) {\r\n      const res = await axios.post(`/api/event/vote/${eventId}/${movieId}`);\r\n      dispatch({\r\n        type: GET_EVENT,\r\n        payload: res.data,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getWinner = (eventId) => async (dispatch) => {\r\n  const res = await axios.get(`/api/event/winner/${eventId}`);\r\n  dispatch({\r\n    type: GET_MOVIE,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\nexport const getEvents = (groupId) => async (dispatch) => {\r\n  const res = await axios.get(`/api/event/all/${groupId}`);\r\n  dispatch({\r\n    type: GET_EVENTS,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\nexport const getEvent = (id, history) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/event/${id}`);\r\n    dispatch({\r\n      type: GET_EVENT,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteEvent = (id) => async (dispatch) => {\r\n  if (window.confirm(\"Are you sure to delete this event?\")) {\r\n    await axios.delete(`/api/event/${id}`);\r\n    dispatch({\r\n      type: DELETE_EVENT,\r\n      payload: id,\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteEvent } from \"../../../../actions/eventAction\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass EventItem extends Component {\r\n  onDeleteClick = (id) => {\r\n    this.props.deleteEvent(id);\r\n  };\r\n\r\n  render() {\r\n    const event = this.props.event;\r\n\r\n    const currentUser = this.props.currentUser;\r\n    const moderator = this.props.moderator;\r\n\r\n    let create;\r\n\r\n    if (currentUser === moderator) {\r\n      create = (\r\n        <React.Fragment>\r\n          <Link\r\n            to={`/groupBoard/updateEvent/${event.id}`}\r\n            className=\"btn btn-info ml-5\"\r\n          >\r\n            Update\r\n          </Link>\r\n          <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={this.onDeleteClick.bind(this, event.id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      create = \"\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className=\"card-header text-primary\">Name: {event.eventName}</div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">Description: {event.description}</h5>\r\n          <h6>Event Time: {event.eventTime}</h6>\r\n          <Link\r\n            to={`/groupBoard/eventPage/${event.id}/${event.movieListId}`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View\r\n          </Link>\r\n\r\n          {create}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEventItem.protoTypes = {\r\n  deleteEvent: PropTypes.func.isRequired,\r\n  moderator: PropTypes.object.isRequired,\r\n  currentUser: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  currentUser: state.security.user.username,\r\n  moderator: state.group.group.moderator,\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteEvent })(EventItem);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Tabs, Tab } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getGroup } from \"../../../actions/groupActions\";\r\nimport { getMovieLists } from \"../../../actions/movieListActions\";\r\nimport MovieListItem from \"./MovieList/MovieListItem\";\r\nimport EventItem from \"./Event/EventItem\";\r\nimport { getEvents } from \"../../../actions/eventAction\";\r\n\r\nclass GroupBoard extends Component {\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getGroup(id, this.props.history);\r\n    this.props.getMovieLists(id);\r\n    this.props.getEvents(id);\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { movieLists } = this.props.movieList;\r\n    const { events } = this.props.event;\r\n    const currentUser = this.props.security.user.username;\r\n    const moderator = this.props.group.moderator;\r\n\r\n    let create;\r\n    let eventButton;\r\n\r\n    if (currentUser === moderator) {\r\n      create = (\r\n        <div>\r\n          <Link\r\n            to={`/groupBoard/addMovieList/${id}`}\r\n            className=\"btn btn-info btn-lg\"\r\n          >\r\n            <i className=\"fas fa-plus-circle\"> Create Movie List</i>\r\n          </Link>\r\n\r\n          <hr />\r\n\r\n          <Link\r\n            to={`/groupBoard/inviteUser/${moderator}/${this.props.group.groupID}`}\r\n            className=\"btn btn-info btn-lg\"\r\n          >\r\n            <i className=\"fas fa-plus-circle\"> Invite User Into Group</i>\r\n          </Link>\r\n\r\n          <hr />\r\n          <Link\r\n            to={`/groupBoard/pullMovieList/${id}`}\r\n            className=\"btn btn-info btn-lg\"\r\n          >\r\n            <i className=\"fas fa-plus-circle\"> Pull a Movie List</i>\r\n          </Link>\r\n        </div>\r\n      );\r\n\r\n      eventButton = (\r\n        <div>\r\n          <Link\r\n            to={`/groupBoard/addEvent/${id}`}\r\n            className=\"btn btn-info btn-lg\"\r\n          >\r\n            <i className=\"fas fa-plus-circle\"> Create a Event</i>\r\n          </Link>\r\n        </div>\r\n      );\r\n    } else {\r\n      eventButton = \"\";\r\n      create = \"\";\r\n    }\r\n\r\n    var currentTime = new Date();\r\n\r\n    let upcomingEvents = [];\r\n    let passEvents = [];\r\n\r\n    events.map((event) => {\r\n      var eventTime = new Date(event.eventTime);\r\n      if (eventTime > currentTime) {\r\n        upcomingEvents.push(event);\r\n      } else {\r\n        passEvents.push(event);\r\n      }\r\n    });\r\n\r\n    return (\r\n      <div className=\"groupBoard\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-2 text-center\">\r\n                {this.props.group.groupName}\r\n              </h1>\r\n              <hr />\r\n              <h3 className=\"text-center\">{this.props.group.description}</h3>\r\n              <Tabs\r\n                variant=\"pills\"\r\n                fill\r\n                defaultActiveKey=\"movieLists\"\r\n                id=\"uncontrolled-tab-example\"\r\n              >\r\n                <Tab eventKey=\"movieLists\" title=\"Movie Lists\">\r\n                  <div className=\"row mt-4\">\r\n                    <div className=\"col-md\">\r\n                      {movieLists.map((movieList) => (\r\n                        <MovieListItem\r\n                          key={movieList.id}\r\n                          movieList={movieList}\r\n                        />\r\n                      ))}\r\n                    </div>\r\n                    <div className=\"col-md \">\r\n                      {create}\r\n                      <hr />\r\n                      <Link\r\n                        to={`/groupBoard/searchPage/${id}`}\r\n                        className=\"btn btn-info btn-lg\"\r\n                      >\r\n                        <i className=\"fas fa-search\"> Search Movie</i>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </Tab>\r\n                <Tab eventKey=\"upcomingEvents\" title=\"Upcoming Events\">\r\n                  <div className=\"row mt-4\">\r\n                    <div className=\"col-md\">\r\n                      {upcomingEvents.map((event) => (\r\n                        <EventItem key={event.id} event={event} />\r\n                      ))}\r\n                    </div>\r\n\r\n                    <div className=\"col-md\">{eventButton}</div>\r\n                  </div>\r\n                </Tab>\r\n                <Tab eventKey=\"passedEvents\" title=\"Passed Events\">\r\n                  {passEvents.map((event) => (\r\n                    <EventItem key={event.id} event={event} />\r\n                  ))}\r\n                </Tab>\r\n              </Tabs>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nGroupBoard.protoTypes = {\r\n  group: PropTypes.object.isRequired,\r\n  getGroup: PropTypes.func.isRequired,\r\n  getMovieLists: PropTypes.func.isRequired,\r\n  movieList: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n  event: PropTypes.object.isRequired,\r\n  getEvents: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  group: state.group.group,\r\n  movieList: state.movieList,\r\n  security: state.security,\r\n  event: state.event,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getGroup, getMovieLists, getEvents })(\r\n  GroupBoard\r\n);\r\n","import React, { Component } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createMovieList } from \"../../../../actions/movieListActions\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass AddMovieList extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      nmovieListNameame: \"\",\r\n      description: \"\",\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    const { id } = this.props.match.params;\r\n\r\n    e.preventDefault();\r\n    const newMovieList = {\r\n      movieListName: this.state.name,\r\n      description: this.state.description,\r\n    };\r\n    this.props.createMovieList(id, newMovieList, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    const { id } = this.props.match.params;\r\n\r\n    return (\r\n      <div className=\"movieList\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/groupBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Group Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Create Movie List form</h4>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.movieListName,\r\n                    })}\r\n                    placeholder=\"MovieList Name\"\r\n                    name=\"name\"\r\n                    value={this.state.movieListName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.movieListName && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.movieListName}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.description,\r\n                    })}\r\n                    placeholder=\"MovieList Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddMovieList.propTypes = {\r\n  createMovieList: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createMovieList })(AddMovieList);\r\n","import React, { Component } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  createMovieList,\r\n  getMovieList\r\n} from \"../../../../actions/movieListActions\";\r\n\r\nclass UpdateMovieList extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      movieListName: \"\",\r\n      description: \"\",\r\n      movieGroupID: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      movieListName,\r\n      description,\r\n      movieGroupID\r\n    } = nextProps.movieList;\r\n\r\n    this.setState({\r\n      id,\r\n      movieListName,\r\n      description,\r\n      movieGroupID\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getMovieList(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newMovieList = {\r\n      id: this.state.id,\r\n      movieListName: this.state.movieListName,\r\n      description: this.state.description\r\n    };\r\n    this.props.createMovieList(\r\n      this.state.movieGroupID,\r\n      newMovieList,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"movieList\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/groupBoard/${this.state.movieGroupID}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Group Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Create Movie List form</h4>\r\n\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.movieListName\r\n                    })}\r\n                    placeholder=\"MovieList Name\"\r\n                    name=\"movieListName\"\r\n                    value={this.state.movieListName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.movieListName && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.movieListName}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"MovieList Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateMovieList.protoTypes = {\r\n  createMovieList: PropTypes.func.isRequired,\r\n  getMovieList: PropTypes.func.isRequired,\r\n  movieList: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  movieList: state.movieList.movieList,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getMovieList, createMovieList })(\r\n  UpdateMovieList\r\n);\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_MOVIES, DELETE_MOVIE, GET_MOVIE } from \"./types\";\r\n\r\nexport const createMovie = (id, movie, moderator, history) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    await axios.post(`/api/movie/${id}`, movie);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n    history.push(`/groupBoard/movieListBoard/${id}/${moderator}`);\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getMovies = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/movie/all/${id}`);\r\n    dispatch({\r\n      type: GET_MOVIES,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getMovie = (id, history) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/movie/${id}`);\r\n    dispatch({\r\n      type: GET_MOVIE,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteGroup = (id) => async (dispatch) => {\r\n  if (window.confirm(\"Are you sure to delete this movie?\")) {\r\n    await axios.delete(`/api/movie/${id}`);\r\n    dispatch({\r\n      type: DELETE_MOVIE,\r\n      payload: id,\r\n    });\r\n  }\r\n};\r\n\r\nexport const searchMovies = (movie_name, group_id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\r\n      `/api/group/searchMovies/${movie_name}/${group_id}`\r\n    );\r\n    dispatch({\r\n      type: GET_MOVIES,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const clearState = () => async (dispatch) => {\r\n  dispatch({\r\n    type: GET_MOVIES,\r\n    payload: [],\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteGroup } from \"../../../../../actions/movieActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass MovieItem extends Component {\r\n  onDeleteClick = (id) => {\r\n    this.props.deleteGroup(id);\r\n  };\r\n\r\n  render() {\r\n    const movie = this.props.movie;\r\n\r\n    const currentUser = this.props.currentUser;\r\n    const moderator = this.props.moderator;\r\n\r\n    let create;\r\n\r\n    if (currentUser === moderator) {\r\n      create = (\r\n        <React.Fragment>\r\n          <Link\r\n            to={`/groupBoard/movieListBoard/updateMovie/${movie.movieList_id}/${movie.id}/${moderator}`}\r\n            className=\"btn btn-info ml-5\"\r\n          >\r\n            Update\r\n          </Link>\r\n          <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={this.onDeleteClick.bind(this, movie.id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      create = \"\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className=\"card-header text-primary\">\r\n          Name: {movie.name}\r\n          {create}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">Description: {movie.description}</h5>\r\n\r\n          <li>\r\n            <a href={movie.reviewLink}>Watch the trailer</a>\r\n          </li>\r\n          <li>\r\n            <a href={movie.reviewLink}>Watch the review</a>\r\n          </li>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMovieItem.protoTypes = {\r\n  deleteMovie: PropTypes.func.isRequired,\r\n  moderator: PropTypes.object.isRequired,\r\n  currentUser: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  currentUser: state.security.user.username,\r\n  moderator: state.group.group.moderator,\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteGroup })(MovieItem);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getMovieList } from \"../../../../../actions/movieListActions\";\r\nimport { getMovies } from \"../../../../../actions/movieActions\";\r\nimport MovieItem from \"./MovieItem\";\r\n\r\nclass MovieListBoard extends Component {\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getMovieList(id, this.props.history);\r\n    this.props.getMovies(id);\r\n  }\r\n\r\n  render() {\r\n    const movies = this.props.movies;\r\n\r\n    const currentUser = this.props.currentUser;\r\n    const { moderator } = this.props.match.params;\r\n\r\n    let create;\r\n\r\n    if (currentUser === moderator) {\r\n      create = (\r\n        <Link\r\n          to={`/groupBoard/movieListBoard/addMovie/${this.props.movieList.id}/${moderator}`}\r\n          className=\"btn btn-lg btn-info\"\r\n        >\r\n          Add a Movie\r\n        </Link>\r\n      );\r\n    } else {\r\n      create = \"\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"movieListBoard\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <Link\r\n                to={`/groupBoard/${this.props.movieList.movieGroupID}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Group Board\r\n              </Link>\r\n              <h1 className=\"display-4 text-center\">\r\n                {this.props.movieList.movieListName}\r\n              </h1>\r\n              <h3 className=\"text-center\">\r\n                {this.props.movieList.description}\r\n              </h3>\r\n              {create}\r\n              <br />\r\n              <hr />\r\n              {movies.map((movie) => (\r\n                <MovieItem key={movie.id} movie={movie} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMovieListBoard.protoTypes = {\r\n  getMovieList: PropTypes.func.isRequired,\r\n  movieList: PropTypes.object.isRequired,\r\n  movie: PropTypes.object.isRequired,\r\n  moderator: PropTypes.object.isRequired,\r\n  currentUser: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  movieList: state.movieList.movieList,\r\n  movies: state.movie.movies,\r\n  moderator: state.group.group.moderator,\r\n  currentUser: state.security.user.username,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getMovieList, getMovies })(\r\n  MovieListBoard\r\n);\r\n","import React, { Component } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createMovie } from \"../../../../../actions/movieActions\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass AddMovie extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      name: \"\",\r\n      description: \"\",\r\n      reviewLink: \"\",\r\n      trailerLink: \"\",\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    const { id, moderator } = this.props.match.params;\r\n\r\n    e.preventDefault();\r\n    const newMovie = {\r\n      name: this.state.name,\r\n      description: this.state.description,\r\n      reviewLink: this.state.reviewLink,\r\n      trailerLink: this.state.trailerLink,\r\n    };\r\n    this.props.createMovie(id, newMovie, moderator, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    const { id } = this.props.match.params;\r\n\r\n    return (\r\n      <div className=\"movieList\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/groupBoard/movieListBoard/${id}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Movie List\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Create Movie form</h4>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.name,\r\n                    })}\r\n                    placeholder=\"Movie Name\"\r\n                    name=\"name\"\r\n                    value={this.state.name}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.name && (\r\n                    <div className=\"invalid-feedback\">{errors.name}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.description,\r\n                    })}\r\n                    placeholder=\"Movie Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.reviewLink,\r\n                    })}\r\n                    type=\"url\"\r\n                    placeholder=\"Movie ReviewLink\"\r\n                    name=\"reviewLink\"\r\n                    value={this.state.reviewLink}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.reviewLink && (\r\n                    <div className=\"invalid-feedback\">{errors.reviewLink}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.trailerLink,\r\n                    })}\r\n                    type=\"url\"\r\n                    placeholder=\"MovieList TrailerLink\"\r\n                    name=\"trailerLink\"\r\n                    value={this.state.trailerLink}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.trailerLink && (\r\n                    <div className=\"invalid-feedback\">{errors.trailerLink}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddMovie.propTypes = {\r\n  createMovie: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createMovie })(AddMovie);\r\n","import React, { Component } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getMovie, createMovie } from \"../../../../../actions/movieActions\";\r\n\r\nclass UpdateMovie extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      name: \"\",\r\n      description: \"\",\r\n      reviewLink: \"\",\r\n      trailerLink: \"\",\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      name,\r\n      description,\r\n      movieList_id,\r\n      reviewLink,\r\n      trailerLink,\r\n    } = nextProps.movie;\r\n\r\n    this.setState({\r\n      id,\r\n      name,\r\n      description,\r\n      movieList_id,\r\n      reviewLink,\r\n      trailerLink,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getMovie(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    const { movieList_id, moderator } = this.props.match.params;\r\n\r\n    e.preventDefault();\r\n    const newMovie = {\r\n      id: this.state.id,\r\n      name: this.state.name,\r\n      description: this.state.description,\r\n      reviewLink: this.state.reviewLink,\r\n      trailerLink: this.state.trailerLink,\r\n    };\r\n    this.props.createMovie(\r\n      movieList_id,\r\n      newMovie,\r\n      moderator,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    const { movieList_id } = this.props.match.params;\r\n\r\n    return (\r\n      <div className=\"movieList\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/groupBoard/movieListBoard/${movieList_id}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Movie List\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Movie form</h4>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.name,\r\n                    })}\r\n                    placeholder=\"Movie Name\"\r\n                    name=\"name\"\r\n                    value={this.state.name}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.name && (\r\n                    <div className=\"invalid-feedback\">{errors.name}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.description,\r\n                    })}\r\n                    placeholder=\"Movie Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.reviewLink,\r\n                    })}\r\n                    placeholder=\"Movie ReviewLink\"\r\n                    name=\"reviewLink\"\r\n                    value={this.state.reviewLink}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.reviewLink && (\r\n                    <div className=\"invalid-feedback\">{errors.reviewLink}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.trailerLink,\r\n                    })}\r\n                    placeholder=\"MovieList TrailerLink\"\r\n                    name=\"trailerLink\"\r\n                    value={this.state.trailerLink}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.trailerLink && (\r\n                    <div className=\"invalid-feedback\">{errors.trailerLink}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateMovie.propTypes = {\r\n  createMovie: PropTypes.func.isRequired,\r\n  getMovie: PropTypes.func.isRequired,\r\n  movie: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  movie: state.movie.movie,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createMovie, getMovie })(UpdateMovie);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">Personal Movie Group Website</h1>\r\n                <p className=\"lead\">\r\n                  Create your account to join groups or start your own\r\n                </p>\r\n                <hr />\r\n                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.protoTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullName\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address (Username)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.protoTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps, { createNewUser })(Register);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={props =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.protoTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const LoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.login(LoginRequest);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { inviteUser } from \"../../../actions/groupActions\";\r\n\r\nclass InvitePage extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const { groupID } = this.props.match.params;\r\n\r\n    const invitation = {\r\n      username: this.state.username,\r\n      groupId: groupID,\r\n    };\r\n\r\n    this.props.inviteUser(invitation, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    const { groupID } = this.props.match.params;\r\n\r\n    return (\r\n      <div className=\"invite\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/groupBoard/${groupID}`} className=\"btn btn-light\">\r\n                Back to Group Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">\r\n                Invite a user to the group\r\n              </h4>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.username,\r\n                    })}\r\n                    placeholder=\"User Name\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nInvitePage.propTypes = {\r\n  inviteUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { inviteUser })(InvitePage);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { searchMovies, clearState } from \"../../../actions/movieActions\";\r\nimport MovieItem from \"./MovieList/MovieListBoard/MovieItem\";\r\n\r\nclass SearchPage extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      moviename: \"\",\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.clearState();\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const { groupID } = this.props.match.params;\r\n\r\n    this.props.searchMovies(this.state.moviename, groupID);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    const { groupID } = this.props.match.params;\r\n    const movies = this.props.movie.movies;\r\n\r\n    return (\r\n      <div className=\"Search Movie\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/groupBoard/${groupID}`} className=\"btn btn-light\">\r\n                Back to Group Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Search Movie</h4>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group \">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.moviename,\r\n                    })}\r\n                    placeholder=\"Type Here\"\r\n                    name=\"moviename\"\r\n                    value={this.state.moviename}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.moviename && (\r\n                    <div className=\"invalid-feedback\">{errors.moviename}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary btn-lg\">\r\n                  Search\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          {movies.map((movie) => (\r\n            <MovieItem key={movie.id} movie={movie} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSearchPage.propTypes = {\r\n  searchMovies: PropTypes.func.isRequired,\r\n  movie: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  clearState: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  movie: state.movie,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { searchMovies, clearState })(\r\n  SearchPage\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { pullMovieList } from \"../../../../actions/movieListActions\";\r\n\r\nclass PullMovieList extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      movieListId: \"\",\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const { groupID } = this.props.match.params;\r\n    this.props.pullMovieList(\r\n      this.state.movieListId,\r\n      groupID,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    const { groupID } = this.props.match.params;\r\n\r\n    return (\r\n      <div className=\"Search Movie\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/groupBoard/${groupID}`} className=\"btn btn-light\">\r\n                Back to Group Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Pull a Movie List</h4>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group \">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.movieListId,\r\n                    })}\r\n                    placeholder=\"Type Here\"\r\n                    name=\"movieListId\"\r\n                    value={this.state.movieListId}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.movieListId && (\r\n                    <div className=\"invalid-feedback\">{errors.movieListId}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block btn-lg\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPullMovieList.propTypes = {\r\n  errors: PropTypes.object.isRequired,\r\n  pullMovieList: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { pullMovieList })(PullMovieList);\r\n","import React, { Component } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createEvent } from \"../../../../actions/eventAction\";\r\n\r\nclass AddEvent extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      eventName: \"\",\r\n      description: \"\",\r\n      eventTime: \"\",\r\n      voteStartTime: \"\",\r\n      voteEndTime: \"\",\r\n      movieListId: \"\",\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    const { groupID } = this.props.match.params;\r\n    e.preventDefault();\r\n\r\n    const newEvent = {\r\n      eventName: this.state.eventName,\r\n      description: this.state.description,\r\n      eventTime: this.state.eventTime,\r\n      voteStartTime: this.state.voteStartTime,\r\n      voteEndTime: this.state.voteEndTime,\r\n      movieListId: this.state.movieListId,\r\n      eventGroupId: groupID,\r\n    };\r\n\r\n    this.props.createEvent(newEvent, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    const { groupID } = this.props.match.params;\r\n\r\n    return (\r\n      <div className=\"add-Event\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/groupBoard/${groupID}`} className=\"btn btn-light\">\r\n                Back to Group Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add a Event</h4>\r\n              <hr />\r\n\r\n              <h6>Event Name</h6>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.eventName,\r\n                    })}\r\n                    name=\"eventName\"\r\n                    placeholder=\"Event Name\"\r\n                    value={this.state.eventName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.eventName && (\r\n                    <div className=\"invalid-feedback\">{errors.eventName}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <h6>Description</h6>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.description,\r\n                    })}\r\n                    placeholder=\"Event Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <h6>\r\n                  Movie List (Please enter the movie list id for people to vote)\r\n                </h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.movieListId,\r\n                    })}\r\n                    placeholder=\"Movie List ID\"\r\n                    name=\"movieListId\"\r\n                    value={this.state.movieListId}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.movieListId && (\r\n                    <div className=\"invalid-feedback\">{errors.movieListId}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <h6>Event Date (Please enter the following format)</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.eventTime,\r\n                    })}\r\n                    placeholder=\"YYYY-MM-DD HH:MM\"\r\n                    name=\"eventTime\"\r\n                    value={this.state.eventTime}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.eventTime && (\r\n                    <div className=\"invalid-feedback\">{errors.eventTime}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <h6>Vote Start Date (Please enter the following format)</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.voteStartTime,\r\n                    })}\r\n                    placeholder=\"YYYY-MM-DD HH:MM\"\r\n                    name=\"voteStartTime\"\r\n                    value={this.state.voteStartTime}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.voteStartTime && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.voteStartTime}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <h6>Vote End Date (Please enter the following format)</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.voteEndTime,\r\n                    })}\r\n                    placeholder=\"YYYY-MM-DD HH:MM\"\r\n                    name=\"voteEndTime\"\r\n                    value={this.state.voteEndTime}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.voteEndTime && (\r\n                    <div className=\"invalid-feedback\">{errors.voteEndTime}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddEvent.protoTypes = {\r\n  errors: PropTypes.object.isRequired,\r\n  createEvent: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createEvent })(AddEvent);\r\n","import React, { Component } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createEvent, getEvent } from \"../../../../actions/eventAction\";\r\n\r\nclass UpdateEvent extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      eventName: \"\",\r\n      description: \"\",\r\n      eventTime: \"\",\r\n      voteStartTime: \"\",\r\n      voteEndTime: \"\",\r\n      movieListId: \"\",\r\n      eventGroupId: \"\",\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      eventName,\r\n      description,\r\n      eventTime,\r\n      voteStartTime,\r\n      voteEndTime,\r\n      movieListId,\r\n      eventGroupId,\r\n    } = nextProps.event;\r\n\r\n    this.setState({\r\n      id,\r\n      eventName,\r\n      description,\r\n      eventTime,\r\n      voteStartTime,\r\n      voteEndTime,\r\n      movieListId,\r\n      eventGroupId,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { eventID } = this.props.match.params;\r\n    this.props.getEvent(eventID, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newEvent = {\r\n      id: this.state.id,\r\n      eventName: this.state.eventName,\r\n      description: this.state.description,\r\n      voteStartTime: this.state.voteStartTime,\r\n      voteEndTime: this.state.voteEndTime,\r\n      movieListId: this.state.movieListId,\r\n      eventTime: this.state.eventTime,\r\n      eventGroupId: this.state.eventGroupId,\r\n    };\r\n\r\n    this.props.createEvent(newEvent, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"add-Event\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/groupBoard/${this.state.eventGroupId}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Group Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add a Event</h4>\r\n              <hr />\r\n\r\n              <h6>Event Name</h6>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.eventName,\r\n                    })}\r\n                    name=\"eventName\"\r\n                    placeholder=\"Event Name\"\r\n                    value={this.state.eventName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.eventName && (\r\n                    <div className=\"invalid-feedback\">{errors.eventName}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <h6>Description</h6>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.description,\r\n                    })}\r\n                    placeholder=\"Event Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <h6>\r\n                  Movie List (Please enter the movie list id for people to vote)\r\n                </h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.movieListId,\r\n                    })}\r\n                    placeholder=\"Movie List ID\"\r\n                    name=\"movieListId\"\r\n                    value={this.state.movieListId}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                  {errors.movieListId && (\r\n                    <div className=\"invalid-feedback\">{errors.movieListId}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <h6>Event Date (Please enter the following format)</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.eventTime,\r\n                    })}\r\n                    placeholder=\"YYYY-MM-DD HH:MM\"\r\n                    name=\"eventTime\"\r\n                    value={this.state.eventTime}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                  {errors.eventTime && (\r\n                    <div className=\"invalid-feedback\">{errors.eventTime}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <h6>Vote Start Date (Please enter the following format)</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.voteStartTime,\r\n                    })}\r\n                    placeholder=\"YYYY-MM-DD HH:MM\"\r\n                    name=\"voteStartTime\"\r\n                    value={this.state.voteStartTime}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.voteStartTime && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.voteStartTime}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <h6>Vote End Date (Please enter the following format)</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.voteEndTime,\r\n                    })}\r\n                    placeholder=\"YYYY-MM-DD HH:MM\"\r\n                    name=\"voteEndTime\"\r\n                    value={this.state.voteEndTime}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.voteEndTime && (\r\n                    <div className=\"invalid-feedback\">{errors.voteEndTime}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateEvent.protoTypes = {\r\n  errors: PropTypes.object.isRequired,\r\n  createEvent: PropTypes.func.isRequired,\r\n  getEvent: PropTypes.func.isRequired,\r\n  event: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  event: state.event.event,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createEvent, getEvent })(UpdateEvent);\r\n","import React, { Component } from \"react\";\r\nimport { vote } from \"../../../../actions/eventAction\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass VoteItem extends Component {\r\n  onVoteClick = (eventId, movieId) => {\r\n    this.props.vote(eventId, movieId);\r\n  };\r\n\r\n  render() {\r\n    const movie = this.props.movie;\r\n    const count = this.props.count;\r\n    const eventId = this.props.eventId;\r\n    const voteEndTime = this.props.voteEndTime;\r\n    const voteStartTime = this.props.voteStartTime;\r\n\r\n    var currentTime = new Date();\r\n    var voteStart = new Date(voteStartTime);\r\n    var voteEnd = new Date(voteEndTime);\r\n    let voteButton;\r\n\r\n    if (currentTime > voteStart && currentTime < voteEnd) {\r\n      voteButton = (\r\n        <button\r\n          className=\"btn btn-info btn-lg\"\r\n          onClick={this.onVoteClick.bind(this, eventId, movie.id)}\r\n        >\r\n          Vote\r\n        </button>\r\n      );\r\n    } else {\r\n      voteButton = \"\";\r\n    }\r\n\r\n    if (voteEndTime)\r\n      return (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-8\">\r\n              <div className=\"card mb-1 bg-light\">\r\n                <div className=\"card-header text-primary\">\r\n                  Name: {movie.name}\r\n                </div>\r\n                <div className=\"card-body bg-light\">\r\n                  <h5 className=\"card-title\">\r\n                    Description: {movie.description}\r\n                  </h5>\r\n\r\n                  <li>\r\n                    <a href={movie.reviewLink}>Watch the trailer</a>\r\n                  </li>\r\n                  <li>\r\n                    <a href={movie.reviewLink}>Watch the review</a>\r\n                  </li>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-2\">\r\n              <h5>Current Votes: {count}</h5>\r\n            </div>\r\n\r\n            <div className=\"col-2\">{voteButton}</div>\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nVoteItem.protoTypes = {\r\n  event: PropTypes.object.isRequired,\r\n  vote: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  event: state.event.event,\r\n});\r\n\r\nexport default connect(mapStateToProps, { vote })(VoteItem);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getMovieList } from \"../../../../actions/movieListActions\";\r\nimport { getMovies } from \"../../../../actions/movieActions\";\r\nimport { getEvent, getWinner } from \"../../../../actions/eventAction\";\r\nimport VoteItem from \"./VoteItem\";\r\n\r\nclass EventPage extends Component {\r\n  componentDidMount() {\r\n    const { eventID, movieListId } = this.props.match.params;\r\n    this.props.getEvent(eventID, this.props.history);\r\n    this.props.getMovieList(movieListId);\r\n    this.props.getMovies(movieListId);\r\n    this.props.getWinner(eventID);\r\n  }\r\n\r\n  render() {\r\n    const movies = this.props.movies;\r\n    const event = this.props.event;\r\n    const movieList = this.props.movieList;\r\n    const winnerMovie = this.props.movie;\r\n\r\n    var currentTime = new Date();\r\n    var voteEndTime = new Date(event.voteEndTime);\r\n\r\n    let winner;\r\n\r\n    if (currentTime > voteEndTime) {\r\n      winner = (\r\n        <div>\r\n          <hr />\r\n          <h2>The winner is: </h2>\r\n          <VoteItem\r\n            key={winnerMovie.id}\r\n            movie={winnerMovie}\r\n            count={\r\n              event.counts[winnerMovie.id] ? event.counts[winnerMovie.id] : 0\r\n            }\r\n            eventId={event.id}\r\n            voteEndTime={event.voteEndTime}\r\n            voteStartTime={event.voteStartTime}\r\n          />\r\n          <hr />\r\n          <h4>The voting count for all movies: </h4>\r\n        </div>\r\n      );\r\n    } else {\r\n      winner = \"\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"movieListBoard\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <Link\r\n                to={`/groupBoard/${event.eventGroupId}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Group Board\r\n              </Link>\r\n              <h1 className=\"display-4 text-center\">{event.eventName}</h1>\r\n              <h3 className=\"text-center\">{event.description}</h3>\r\n\r\n              <br />\r\n              <hr />\r\n              <h2>\r\n                This event is choose a movie from movie list \"\r\n                {movieList.movieListName}\"\r\n              </h2>\r\n              <h4>Event Time: {event.eventTime}</h4>\r\n              <h4>Vote Starts: {event.voteStartTime}</h4>\r\n              <h4>Vote Ends: {event.voteEndTime}</h4>\r\n\r\n              {winner}\r\n              <hr />\r\n              {movies.map((movie) => (\r\n                <VoteItem\r\n                  key={movie.id}\r\n                  movie={movie}\r\n                  count={event.counts[movie.id] ? event.counts[movie.id] : 0}\r\n                  eventId={event.id}\r\n                  voteEndTime={event.voteEndTime}\r\n                  voteStartTime={event.voteStartTime}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEventPage.protoTypes = {\r\n  getMovieList: PropTypes.func.isRequired,\r\n  movieList: PropTypes.object.isRequired,\r\n  movies: PropTypes.object.isRequired,\r\n  event: PropTypes.object.isRequired,\r\n  getEvent: PropTypes.func.isRequired,\r\n  getWinner: PropTypes.func.isRequired,\r\n  movie: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  movieList: state.movieList.movieList,\r\n  movies: state.movie.movies,\r\n  event: state.event.event,\r\n  movie: state.movie.movie,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getMovieList,\r\n  getMovies,\r\n  getEvent,\r\n  getWinner,\r\n})(EventPage);\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./components/Layout/Header\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport AddGroup from \"./components/Group/AddGroup\";\nimport store from \"./store\";\nimport UpdateGroup from \"./components/Group/UpdateGroup\";\nimport GroupBoard from \"./components/Group/GroupBoard/GroupBoard\";\nimport AddMovieList from \"./components/Group/GroupBoard/MovieList/AddMovieList\";\nimport UpdateMovieList from \"./components/Group/GroupBoard/MovieList/UpdateMovieList\";\nimport MovieListBoard from \"./components/Group/GroupBoard/MovieList/MovieListBoard/MovieListBoard\";\nimport AddMovie from \"./components/Group/GroupBoard/MovieList/MovieListBoard/AddMovie\";\nimport UpdateMovie from \"./components/Group/GroupBoard/MovieList/MovieListBoard/UpdateMovie\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\nimport Login from \"./components/UserManagement/Login\";\nimport InvitePage from \"./components/Group/GroupBoard/InvitePage\";\nimport SearchPage from \"./components/Group/GroupBoard/SearchPage\";\nimport PullMovieList from \"./components/Group/GroupBoard/MovieList/PullMovieList\";\nimport AddEvent from \"./components/Group/GroupBoard/Event/AddEvent\";\nimport UpdateEvent from \"./components/Group/GroupBoard/Event/UpdateEvent\";\nimport EventPage from \"./components/Group/GroupBoard/Event/EventPage\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded,\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n\n          <Switch>\n            <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n            <SecuredRoute exact path=\"/addGroup\" component={AddGroup} />\n            <SecuredRoute\n              exact\n              path=\"/updateGroup/:id\"\n              component={UpdateGroup}\n            />\n            <SecuredRoute exact path=\"/groupBoard/:id\" component={GroupBoard} />\n            <SecuredRoute\n              exact\n              path=\"/groupBoard/addMovieList/:id\"\n              component={AddMovieList}\n            />\n            <SecuredRoute\n              exact\n              path=\"/groupBoard/updateMovieList/:id\"\n              component={UpdateMovieList}\n            />\n            <SecuredRoute\n              exact\n              path=\"/groupBoard/movieListBoard/:id/:moderator\"\n              component={MovieListBoard}\n            />\n            <SecuredRoute\n              exact\n              path=\"/groupBoard/movieListBoard/addMovie/:id/:moderator\"\n              component={AddMovie}\n            />\n            <SecuredRoute\n              exact\n              path=\"/groupBoard/movieListBoard/updateMovie/:movieList_id/:id/:moderator\"\n              component={UpdateMovie}\n            />\n            <SecuredRoute\n              exact\n              path=\"/groupBoard/inviteUser/:username/:groupID\"\n              component={InvitePage}\n            />\n            <SecuredRoute\n              exact\n              path=\"/groupBoard/searchPage/:groupID\"\n              component={SearchPage}\n            />\n            <SecuredRoute\n              exact\n              path=\"/groupBoard/pullMovieList/:groupID\"\n              component={PullMovieList}\n            />\n            <SecuredRoute\n              exact\n              path=\"/groupBoard/addEvent/:groupID\"\n              component={AddEvent}\n            />\n            <SecuredRoute\n              exact\n              path=\"/groupBoard/updateEvent/:eventID\"\n              component={UpdateEvent}\n            />\n            <SecuredRoute\n              exact\n              path=\"/groupBoard/eventPage/:eventID/:movieListId\"\n              component={EventPage}\n            />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}